Screen2 As screen:

    UsersToMatchTable As dataTable.datatable:
        BorderStyle: =BorderStyle.Solid
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Height: =298
        Items: =Filter(filteredUsers, TextInput6.Text in displayName)
        Width: =1257
        X: =64
        Y: =456
        ZIndex: =1

        displayName_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="displayName"
            FieldName: ="displayName"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.displayName
            Width: =100
            X: =0
            Y: =0
            ZIndex: =7

        userPrincipalName_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="userPrincipalName"
            FieldName: ="userPrincipalName"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: =ThisItem.userPrincipalName
            Width: =100
            X: =0
            Y: =0
            ZIndex: =8

        otherMails_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="otherMails"
            FieldName: ="otherMails"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =3
            Text: =If(CountRows(Table(ThisItem.otherMails)) >0 , Concat(Table(ThisItem.otherMails),Value ,";"), "")
            Width: =100
            X: =0
            Y: =0
            ZIndex: =9

        manager_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="manager"
            FieldName: ="manager"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =4
            Text: =ThisItem.manager
            Width: =100
            X: =0
            Y: =0
            ZIndex: =10

        lastSignInDate_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="lastSignInDate"
            FieldName: ="lastSignInDate"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =5
            Text: =ThisItem.lastSignInDate
            Width: =100
            X: =0
            Y: =0
            ZIndex: =11

        lastNonInteractiveSignInDateTime_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="lastNonInteractiveSignInDateTime"
            FieldName: ="lastNonInteractiveSignInDateTime"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =6
            Text: =ThisItem.lastNonInteractiveSignInDateTime
            Width: =100
            X: =0
            Y: =0
            ZIndex: =12

    ManagerTable As dataTable.datatable:
        BorderStyle: =BorderStyle.Solid
        DisplayMode: =DisplayMode.Edit
        Fill: =RGBA(0, 0, 0, 0)
        Height: =226
        Items: =Filter(allUsers_table, TextInput5.Text in displayName)
        Width: =638
        X: =615
        Y: =56
        ZIndex: =2

        displayName_Column5_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="displayName"
            FieldName: ="displayName"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =1
            Text: =ThisItem.displayName
            Width: =100
            X: =0
            Y: =0
            ZIndex: =13

        userPrincipalName_Column4_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="userPrincipalName"
            FieldName: ="userPrincipalName"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =2
            Text: =ThisItem.userPrincipalName
            Width: =100
            X: =0
            Y: =0
            ZIndex: =14

        objectId_Column1_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="objectId"
            FieldName: ="objectId"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =3
            Text: =ThisItem.objectId
            Width: =100
            X: =0
            Y: =0
            ZIndex: =15

        lastSignInDate_Column2_1 As dataTableColumn.textualColumn:
            DisplayMode: =DisplayMode.Edit
            FieldDisplayName: ="lastSignInDate"
            FieldName: ="lastSignInDate"
            FieldVariantName: ="textualColumn"
            Height: =Parent.Height
            LayoutHeight: =Parent.Height
            Order: =4
            Text: =ThisItem.lastSignInDate
            Width: =100
            X: =0
            Y: =0
            ZIndex: =16

    TextInput5 As text:
        Default: =""
        HintText: ="Manager Search"
        X: =615
        Y: =4
        ZIndex: =3

    Button21 As button:
        OnSelect: =Set(filteredUsers, Filter(allUsers_table, manager = Blank()))
        Text: ="Button"
        X: =472
        Y: =364
        ZIndex: =4

    TextInput6 As text:
        Default: =""
        HintText: ="Account Search"
        X: =104
        Y: =364
        ZIndex: =5

    Button19_1 As button:
        OnSelect: |-
            =// Search for Current User in PFECRMOnline, searching against job title [TEMP], will check for 'other' email first
            Set(managerAssociate, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UpdateManager", "{""managerObjectId"":""" & ManagerTable.Selected.objectId & """,""userObjectId"":""" & UsersToMatchTable.Selected.objectId  & """}").result));
        Text: ="manager"
        Width: =306
        X: =1015
        Y: =364
        ZIndex: =6

    Icon3 As icon.ArrowLeft:
        Icon: =Icon.ArrowLeft
        OnSelect: =Back()
        X: =13
        Y: =4
        ZIndex: =7

    Button5_1 As button:
        FontWeight: =FontWeight.Bold
        Height: =37
        OnSelect: |-
            =Set(userCreator,ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("FindUserCreator", "{""userEmail"":""" & UsersToMatchTable.Selected.userPrincipalName  & """}").result))
        Text: ="check owner"
        X: =833
        Y: =367
        ZIndex: =9

    Label4 As label:
        Height: =28
        Text: =If(CountRows(userCreator.value) > 0, Text(First(userCreator.value).initiatedBy.user.userPrincipalName), "None")
        Width: =450
        X: =590
        Y: =310
        ZIndex: =10

    Button16_10 As button:
        OnSelect: =Set(filteredUsers, Filter(allUsers_table, manager = Blank() And !("@microsoft.com" in Concat(Table(otherMails),Value ,";")) ))
        Text: ="filter"
        Width: =107
        X: =1234
        Y: =4
        ZIndex: =11

    LinkAccount2Button_1 As button:
        OnSelect: |-
            =Set(curUserAdDetails, ParseJSON(ValidateADUser.Run(Gallery3_1.Selected.Mail).validuser));
            Set(emailsArray, "[""" & If(Text(curUserAdDetails.upn) = Text(curUserAdDetails.email), Text(curUserAdDetails.upn) & """", Text(curUserAdDetails.upn) & """,""" & Text(curUserAdDetails.email) & """") & "]");
            
            Set(payloadString, 
                    "{""pfeCrmOnlineUserId"":""" & Text(UsersToMatchTable.Selected.objectId) & ""","
                    & """emailsToLink"":" & emailsArray & "}"
                );
            
            //'Temp-TestingNewFlowForIncomingRequests'.Run("LinkUser", payloadString);
            //Set(userAccountLinkedSuccesfully, true);
            //Notify("User account linked succesfully", NotificationType.Success);
        Text: ="Find Account"
        X: =652
        Y: =365
        ZIndex: =12

    "Gallery3_1 As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver5.0'":
        DelayItemLoading: =true
        Height: =236
        Items: =Filter(Users, "@microsoft.com" in Mail)
        Layout: =Layout.Vertical
        LoadingSpinner: =LoadingSpinner.Data
        TemplatePadding: =0
        TemplateSize: =89
        Width: =383
        X: =207
        ZIndex: =13

        Title6_1 As label:
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =50
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.DisplayName 
            VerticalAlign: =VerticalAlign.Top
            Width: =352
            X: =16
            Y: =(Parent.TemplateHeight - (Self.Size*1.8 + Subtitle6_1.Size*1.8 + 2 + Body3_1.Size*1.8)) / 2
            ZIndex: =1

        Subtitle6_1 As label:
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.Mail
            VerticalAlign: =VerticalAlign.Top
            Width: =Title6_1.Width
            X: =227
            Y: =18
            ZIndex: =2

        Body3_1 As label:
            FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Text: =ThisItem.JobTitle & " - " & ThisItem.Department
            VerticalAlign: =VerticalAlign.Top
            Width: =Title6_1.Width
            X: =Title6_1.X
            Y: =Subtitle6_1.Y + Subtitle6_1.Height
            ZIndex: =3

        NextArrow4_1 As icon.ChevronRight:
            AccessibleLabel: =Self.Tooltip
            Color: =RGBA(166, 166, 166, 1)
            Height: =50
            Icon: =Icon.ChevronRight
            OnSelect: =Select(Parent)
            PaddingBottom: =16
            PaddingLeft: =16
            PaddingRight: =16
            PaddingTop: =16
            Tooltip: ="View item details"
            Width: =50
            X: =Parent.TemplateWidth - Self.Width - 12
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =4

        Separator4_1 As rectangle:
            Height: =8
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =81
            ZIndex: =5

        Rectangle4_1 As rectangle:
            Height: =Parent.TemplateHeight - Separator4_1.Height
            OnSelect: =Select(Parent)
            Visible: =If(ThisItem.IsSelected, true, false)
            Width: =4
            ZIndex: =6

    TextInput2_1 As text:
        Default: =""
        Height: =41
        Width: =150
        X: =26
        Y: =71
        ZIndex: =14

    Button17_1 As button:
        Height: =36
        OnSelect: |
            =Set(Users,Office365Users.SearchUser({searchTerm: TextInput2_1}));
        Text: ="Search"
        X: =16
        Y: =119
        ZIndex: =15

    Label10_1 As label:
        Text: ="[" & CountRows(Users)  & "]"
        X: =26
        Y: =155
        ZIndex: =16

    Label13 As label:
        Height: =57
        Text: =payloadString
        Width: =472
        X: =13
        Y: =281
        ZIndex: =17

    Icon5 As icon.Check:
        Height: =48
        Icon: =Icon.Check
        OnSelect: |
            =Set(Users,Office365Users.SearchUser({searchTerm: UsersToMatchTable.Selected.displayName}));
        Width: =40
        X: =24
        Y: =404
        ZIndex: =18

    Button18 As button:
        OnSelect: |-
            ='Temp-TestingNewFlowForIncomingRequests'.Run("LinkUser", payloadString);
            Set(userAccountLinkedSuccesfully, true);
            Notify("User account linked succesfully", NotificationType.Success, 500);
        Text: ="Link"
        X: =652
        Y: =410
        ZIndex: =19

