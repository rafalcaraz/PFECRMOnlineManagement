LicensePopup As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    Height: =App.Height
    Width: =App.Width
    X: =0
    Y: =0
    ZIndex: =1

    transparentBackground As rectangle:
        Fill: =RGBA(209, 209, 209, .8)
        Height: =App.Height
        Width: =App.Width
        ZIndex: =1

    solidBackground As rectangle:
        Fill: =RGBA(0, 51, 102, 1)
        Height: =675
        Width: =1191
        X: =72
        Y: =36
        ZIndex: =2

    closeLabel As icon.CancelBadge:
        Color: =RGBA(255, 255, 255, 1)
        Height: =42
        Icon: =Icon.CancelBadge
        OnSelect: =Set(showPopup, false)
        Width: =50
        X: =75
        Y: =47
        ZIndex: =3

    poupLabel As label:
        Color: =RGBA(255, 255, 255, 1)
        FontWeight: =FontWeight.Bold
        Text: ="Request License"
        X: =1113
        Y: =36
        ZIndex: =4

    currentUserEmail As label:
        Color: =RGBA(255, 255, 255, 1)
        Height: =32
        Text: |-
            ="PFECRMOnline Email: " & userMainRecord.userPrincipalName
        Width: =764
        X: =132
        Y: =57
        ZIndex: =5

    "availableLicensesGallery As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver4.0'":
        Fill: =RGBA(136, 160, 209, 1)
        Height: =352
        Items: =Search(Filter(availableSKUs_table_2, appliesTo = "User"), searchLicenseInput.Text, "friendlyName")
        Layout: =Layout.Vertical
        OnSelect: =If(IsBlank(LookUp(licensesSelected, skuId = availableLicensesGallery.Selected.skuId)) = true And ThisItem.enabledPrepaidUnits <> 0, Collect(licensesSelected, availableLicensesGallery.Selected))
        TemplatePadding: =0
        TemplateSize: =91
        Width: =534
        X: =117
        Y: =285
        ZIndex: =7

        Title5 As label:
            Color: =RGBA(255, 255, 255, 1)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: =ThisItem.friendlyName
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =19
            Y: =15
            ZIndex: =1

        Subtitle5 As label:
            Color: =RGBA(255, 255, 255, 1)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                ="Consumed Units: " & ThisItem.consumedUnits
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =19
            Y: =38
            ZIndex: =2

        Body2 As label:
            Color: =RGBA(255, 255, 255, 1)
            Height: =28
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: |-
                ="Available: " & ThisItem.enabledPrepaidUnits
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =19
            Y: =62
            ZIndex: =3

        NextArrow5 As icon.ChevronRight:
            AccessibleLabel: =Self.Tooltip
            Height: =60
            Icon: =Icon.ChevronRight
            OnSelect: =Select(Parent)
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="View item details"
            Width: =60
            X: =Parent.TemplateWidth - Self.Width - 5
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =4

        Separator5 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =5

    licensesSelectedLabel As label:
        Color: =RGBA(255, 255, 255, 1)
        Text: ="Licenses Selected"
        Width: =214
        X: =706
        Y: =235
        ZIndex: =8

    "selectedLicencesGallery As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
        Fill: =RGBA(136, 160, 209, 1)
        Height: =358
        Items: =licensesSelected
        Layout: =Layout.Vertical
        TemplatePadding: =0
        TemplateSize: =Min(96, Self.Height - 60)
        Width: =343
        X: =706
        Y: =275
        ZIndex: =9

        Title7 As label:
            Color: =RGBA(255, 255, 255, 1)
            Height: =Self.Size * 1.8
            OnSelect: =Select(Parent)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =11
            Text: =ThisItem.friendlyName
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.TemplateWidth - 104
            X: =32
            Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
            ZIndex: =1

        Separator7 As rectangle:
            Height: =1
            OnSelect: =Select(Parent)
            Width: =Parent.TemplateWidth
            Y: =Parent.TemplateHeight - 1
            ZIndex: =3

        Icon4 As icon.Cancel:
            Color: =RGBA(255, 255, 255, 1)
            Height: =38
            Icon: =Icon.Cancel
            OnSelect: =Remove(licensesSelected, ThisItem)
            Width: =32
            X: =271
            Y: =29
            ZIndex: =4

    searchLicenseInput As text:
        Default: =""
        HintText: ="Search for licenses..."
        X: =117
        Y: =235
        ZIndex: =12

    assignButton As button:
        DisplayMode: |-
            =//If(IsBlank(ComboBox1) = false, If(Toggle1.Value = false, DisplayMode.Edit, If(userNotFound = false, DisplayMode.Edit, DisplayMode.Disabled)), DisplayMode.Disabled)
            If(IsBlank(expirationComboBox) = false, 
                If(currentUserToggle.Value = false,
                    DisplayMode.Edit,
                    If(userNotFound = false,
                        DisplayMode.Edit,
                        DisplayMode.Disabled)),
                DisplayMode.Disabled)
        Fill: =RGBA(141, 198, 63, 1)
        OnSelect: |-
            =
            //AddRemoveLicense
            //Add licenses string format
            Set(addLicenses_stringFormat, Concat(licensesSelected, "{""skuId"":""" & ThisRecord.skuId &  """" & "},"));
            
            //Remove licences string format TODO
            Set(removeLicenses_stringFormat, "");
            
            Set(payloadString, 
                "{""userId"":""" & If(currentUserToggle.Value, If(userNotFound = false, Text(findUserResponse_json.id), "NULL"), userMainRecord.id) 
                & """,""addLicenses"": [" & Left( addLicenses_stringFormat, Len(addLicenses_stringFormat) -1 ) 
                & "], ""removeLicenses"":[" & removeLicenses_stringFormat & "],"  
                & """expirationRequired"":" & If(expirationComboBox.Selected.Value = "No Expiration", false, true) & ","
                & """expirationLength"":""" & expirationComboBox.Selected.Value & """"
                & " }");
            
            Set(addRemoveLicences_json, ParseJSON(
                'Temp-TestingNewFlowForIncomingRequests'.Run("AddRemoveLicense", payloadString).result)
            );
        Text: ="Assign"
        X: =706
        Y: =646
        ZIndex: =13

    expirationComboBox As combobox:
        DisplayFields: =["Value"]
        InputTextPlaceholder: ="Select Duration"
        Items: =["1","2","3","4","5","6","7","No Expiration"]
        SearchFields: =["Value"]
        SearchItems: =Search(["1","2","3","4","5","6","7","No Expiration"],expirationComboBox.SearchText,"Value")
        SelectMultiple: =false
        X: =715
        Y: =167
        ZIndex: =14

    expirationLabel As label:
        Color: =RGBA(255, 255, 255, 1)
        Height: =31
        Text: |-
            ="Expiration (Days):"
        Width: =186
        X: =529
        Y: =171
        ZIndex: =15

    currentUserToggle As toggleSwitch:
        Color: =RGBA(255, 255, 255, 1)
        FalseText: ="Current User"
        Height: =32
        OnChange: =
        TrueFill: =RGBA(152, 208, 70, 1)
        TrueText: ="Other User"
        Width: =177
        X: =132
        Y: =89
        ZIndex: =16

    targetUserLabel As label:
        Color: =RGBA(255, 255, 255, 1)
        Height: =35
        Text: |-
            ="Target User: " & If(currentUserToggle.Value, If(userNotFound, "USER NOT FOUND", Text(findUserResponse_json.displayName)) , userMainRecord.userPrincipalName) 
        Width: =383
        X: =117
        Y: =183
        ZIndex: =17

    UPNInput As text:
        Default: =""
        Height: =37
        HintText: ="UPN"
        Visible: =currentUserToggle.Value
        Width: =173
        X: =117
        Y: =127
        ZIndex: =18

    findUserButton As button:
        OnSelect: |
            =Set(findUserResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("FindUser", "{""userEmail"":""" & UPNInput.Text & "@pfecrmonline.onmicrosoft.com" & """ }").result));
            Set(userNotFound, If(IsBlank(Text(findUserResponse_json.id)), true, false));
        Text: ="Find"
        Visible: =currentUserToggle.Value
        X: =621
        Y: =121
        ZIndex: =19

    domainLabel As label:
        Color: =RGBA(255, 255, 255, 1)
        Height: =34
        Text: ="@pfecrmonline.onmicrosoft.com"
        Visible: =currentUserToggle.Value
        Width: =287
        X: =298
        Y: =127
        ZIndex: =20

