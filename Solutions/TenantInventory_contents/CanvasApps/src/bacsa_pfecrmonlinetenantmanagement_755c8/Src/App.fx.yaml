App As appinfo:
    BackEnabled: =false
    OnStart: |+
        =// Setting AD Roles
        ClearCollect(AzureRoles, {RoleName: "User", RoleId: "NONE"}, {RoleName: "Dynamics 365 Admin", RoleId: "44367163-eba1-44c3-98af-f5787879f96a"},{RoleName: "Power Platform Admin", RoleId: "11648597-926c-4cf3-9c36-bcebb0ba8dcc"} ,{RoleName:"Global Admin", RoleId:"62e90394-69f5-4237-9190-012177145e10"});
        
        
        // Get all Friendly license details
        ClearCollect(productsFriendly, {
                skuId:  "1f2f344a-700d-42c9-9427-5cea1d5d7ba6",
                skuPartNumber:  "STREAM",
                FriendlyName:  "Microsoft Stream Trial"
            },
            {
                skuId:  "b05e124f-c7cc-45a0-a6aa-8cf78c946968",
                skuPartNumber:  "EMSPREMIUM",
                FriendlyName:  "Enterprise Mobility + Security E5"
            },
            {
                skuId:  "6ec92958-3cc1-49db-95bd-bc6b3798df71",
                skuPartNumber:  "Dynamics_365_Sales_Premium_Viral_Trial",
                FriendlyName:  "Dynamics 365 Sales Premium Viral Trial"
            },
            {
                skuId:  "5b22585d-1b71-4c6b-b6ec-160b1a9c2323",
                skuPartNumber:  "D365_SALES_ENT_ATTACH",
                FriendlyName:  "Dynamics 365 Sales Enterprise Attach to Qualifying Dynamics 365 Base Offer"
            },
            {
                skuId:  "61e6bd70-fbdb-4deb-82ea-912842f39431",
                skuPartNumber:  "DYN365_AI_SERVICE_INSIGHTS",
                FriendlyName:  "Dynamics 365 Customer Service Insights Trial"
            },
            {
                skuId:  "0a389a77-9850-4dc4-b600-bc66fdfefc60",
                skuPartNumber:  "GUIDES_USER",
                FriendlyName:  "Dynamics 365 Guides"
            },
            {
                skuId:  "6fd2c87f-b296-42f0-b197-1e91e994b900",
                skuPartNumber:  "ENTERPRISEPACK",
                FriendlyName:  "Office 365 E3"
            },
            {
                skuId:  "036c2481-aa8a-47cd-ab43-324f0c157c2d",
                skuPartNumber:  "DYN365_CUSTOMER_INSIGHTS_VIRAL",
                FriendlyName:  "Dynamics 365 Customer Insights Viral"
            },
            {
                skuId:  "c7d15985-e746-4f01-b113-20b575898250",
                skuPartNumber:  "DYN365_ENTERPRISE_FIELD_SERVICE",
                FriendlyName:  "Dynamics 365 Field Service"
            },
            {
                skuId:  "f30db892-07e9-47e9-837c-80727f46fd3d",
                skuPartNumber:  "FLOW_FREE",
                FriendlyName:  "Microsoft Power Automate Free"
            },
            {
                skuId:  "a36cdaa2-a806-4b6e-9ae0-28dbd993c20e",
                skuPartNumber:  "D365_FIELD_SERVICE_ATTACH",
                FriendlyName:  "Dynamics 365 Field Service Attach to Qualifying Dynamics 365 Base Offer"
            },
            {
                skuId:  "606b54a9-78d8-4298-ad8b-df6ef4481c80",
                skuPartNumber:  "CCIBOTS_PRIVPREV_VIRAL",
                FriendlyName:  "Power Virtual Agents Viral Trial"
            },
            {
                skuId:  "bc946dac-7877-4271-b2f7-99d2db13cd2c",
                skuPartNumber:  "FORMS_PRO",
                FriendlyName:  "Dynamics 365 Customer Voice Trial"
            },
            {
                skuId:  "dcb1a3ae-b33f-4487-846a-a640262fadf4",
                skuPartNumber:  "POWERAPPS_VIRAL",
                FriendlyName:  "Microsoft Power Apps Plan 2 Trial"
            },
            {
                skuId:  "d17b27af-3f49-4822-99f9-56a661538792",
                skuPartNumber:  "CRMSTANDARD",
                FriendlyName:  "Microsoft Dynamics CRM Online"
            },
            {
                skuId:  "749742bf-0d37-4158-a120-33567104deeb",
                skuPartNumber:  "DYN365_ENTERPRISE_CUSTOMER_SERVICE",
                FriendlyName:  "Dynamics 365 Customer Service Enterprise"
            },
            {
                skuId:  "ea126fc5-a19e-42e2-a731-da9d437bffcf",
                skuPartNumber:  "DYN365_ENTERPRISE_PLAN1",
                FriendlyName:  "Dynamics 365 Customer Engagement Plan"
            },
            {
                skuId:  "a403ebcc-fae0-4ca2-8c8c-7a907fd6c235",
                skuPartNumber:  "POWER_BI_STANDARD",
                FriendlyName:  "Power BI (free)"
            },
            {
                skuId:  "710779e8-3d4a-4c88-adb9-386c958d1fdf",
                skuPartNumber:  "TEAMS_EXPLORATORY",
                FriendlyName:  "Microsoft Teams Exploratory"
            },
            {
                skuId:  "fcecd1f9-a91e-488d-a918-a96cdb6ce2b0",
                skuPartNumber:  "AX7_USER_TRIAL",
                FriendlyName:  "Microsoft Dynamics AX7 User Trial"
            },
            {
                skuId:  "eb18b715-ea9d-4290-9994-2ebf4b5042d2",
                skuPartNumber:  "D365_CUSTOMER_SERVICE_ENT_ATTACH",
                FriendlyName:  "Dynamics 365 Customer Service Enterprise Attach to Qualifying Dynamics 365 Base Offer"
            },
            {
                skuId:  "1e1a282c-9c54-43a2-9310-98ef728faace",
                skuPartNumber:  "DYN365_ENTERPRISE_SALES",
                FriendlyName:  "Dynamics 365 Sales Enterprise Edition"
            },
            {
                skuId:  "8e7a3d30-d97d-43ab-837c-d7701cef83dc",
                skuPartNumber:  "DYN365_ENTERPRISE_TEAM_MEMBERS",
                FriendlyName:  "Dynamics 365 Team Members"
            },
            {
                skuId:  "8c25713e-c6c2-473e-8b47-f0d273f00f30",
                skuPartNumber:  "CRM_FIELD_SERVICE_ADDON",
                FriendlyName:  "Microsoft Dynamics CRM Online - Field Service User Add-On"
            },
            { skuId:"55c9eb4e-c746-45b4-b255-9ab6b19d5c62", skuPartNumber: "DYN365_FINANCE", FriendlyName: "Dynamics 365 Finance"},
        { skuId:"1e615a51-59db-4807-9957-aa83c3657351", skuPartNumber: "Dynamics_365_Customer_Service_Enterprise_viral_trial", FriendlyName: "Dynamics 365 Customer Service Enterprise vTrial"},
        { skuId:"4b74a65c-8b4a-4fc8-9f6b-5177ed11ddfa", skuPartNumber: "VIRTUAL_AGENT_USL", FriendlyName: "Power Virtual Agent User License"},
        { skuId:"c7df2760-2c81-4ef7-b578-5b5392b571df", skuPartNumber: "ENTERPRISEPREMIUM", FriendlyName: "Office 365 E5"},
        { skuId:"f8a1db68-be16-40ed-86d5-cb42ce701560", skuPartNumber: "POWER_BI_PRO", FriendlyName: "Power BI Pro"},
        { skuId:"1925967e-8013-495f-9644-c99f8b463748", skuPartNumber: "TVM_Premium_Standalone", FriendlyName: "Microsoft Defender Vulnerability Management"},
        { skuId:"44d9c38d-163a-44a5-abac-31777a743bfc", skuPartNumber: "REMOTE_ASSIST_DEVICE", FriendlyName: "Dynamics 365 Remote Assist Device"},
        { skuId:"09015f9f-377f-4538-bbb5-f75ceb09358a", skuPartNumber: "PROJECTPREMIUM", FriendlyName: "Project Plan 5"},
        { skuId:"2988929f-9b34-4522-ae71-7ffa6f6d0d81", skuPartNumber: "GUIDES_DEVICE", FriendlyName: "Dynamics 365 Guides Device"},
        { skuId: "f2e48cb3-9da0-42cd-8464-4a54ce198ad0", skuPartNumber: "DYN365_SCM", FriendlyName: "Dynamics 365 Supply Chain Management"},
        { skuId: "c55410cb-36d5-47f0-9b9f-5bcca0f31c1b", skuPartNumber: "DYN365_CS_OC_MESSAGING_VOICE", FriendlyName: "Dynamics 365 Customer Service Digital Messaging and Voice Add-in"},
        { skuId: "3489e6e2-6bfe-409a-b6f4-1ee106f2db5b", skuPartNumber: "DYN365_SALES_INSIGHTS", FriendlyName: "Dynamics 365 Sales Insights"},
        { skuId: "3f9f06f5-3c31-472c-985f-62d9c10ec167", skuPartNumber: "Power_Pages_vTrial_for_Makers", FriendlyName: "Power Pages vTrial for Makers"},
        { skuId: "b30411f5-fea1-4a59-9ad9-3db7c7ead579", skuPartNumber: "POWERAPPS_PER_USER", FriendlyName: "Power Apps per user plan"},
        { skuId: "20a48bfa-85c4-46f3-8475-c604be6035f0", skuPartNumber: "MS_CLOUD_HEALTHCARE", FriendlyName: "Microsoft Cloud for Healthcare AddOn"},
        { skuId: "de376a03-6e5b-42ec-855f-093fb50b8ca5", skuPartNumber: "PBI_PREMIUM_PER_USER_ADDON", FriendlyName: "Power BI Premium Per User Add-On"},
        { skuId: "1158b512-8e2b-4afc-98b5-340b23800d3e", skuPartNumber: "INTERNAL__Dynamics_365_Commerce", FriendlyName: "INTERNAL: Dynamics 365 Commerce"},
        { skuId: "eda1941c-3c4f-4995-b5eb-e85a42175ab9", skuPartNumber: "POWERAUTOMATE_ATTENDED_RPA", FriendlyName: "Power Automate per user with attended RPA plan"},
        { skuId: "5b631642-bd26-49fe-bd20-1daaa972ef80", skuPartNumber: "POWERAPPS_DEV", FriendlyName: "Microsoft Power Apps for Developer"},
        { skuId: "84a661c4-e949-4bd2-a560-ed7766fcaf2b", skuPartNumber: "AAD_PREMIUM_P2", FriendlyName: "Azure Active Directory Premium P2"}
        
        
            );
        
        
        // Retrieve all azure Subscriptions
        Set(allAzureSubscriptions_json, 
            ForAll(Table(ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAllAzureSubscriptions", "{}").result).value) As _skus, 
                { id: Text(_skus.Value.subscriptionId),   //Text(ThisRecord.Value.capabilityStatus), 
                    displayName: Text(_skus.Value.displayName)
        
                }
            )
        );
        
        // Get all azure resource groups
        ClearCollect(allResourceGroups, Blank());
        ForAll(allAzureSubscriptions_json As _subscriptions,
            //Collect(allResourceGroups, "")
            Collect(allResourceGroups,
                ForAll(Table(ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAllResourceGroupsInSubscription", "{""subscriptionId"":""" & _subscriptions.id & """ }").result).value) As _groups,
                    {
                        id : Text(_groups.Value.id),
                        name: Text(_groups.Value.name),
                        susbcriptionId: Text(_subscriptions.id),
                        subscriptionName: Text(_subscriptions.displayName)
                    }
                )
            )
        );
        
        
        // Retrieve all SKUS
        Set(availableSKUs_table_2, 
            ForAll(Table(ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("AvailableSKUs", "{}").result).value) As _skus, 
                { capabilityStatus: Text(_skus.Value.capabilityStatus),   //Text(ThisRecord.Value.capabilityStatus), 
                    consumedUnits: Value(_skus.Value.consumedUnits),
                    skuId: Text(_skus.Value.skuId), 
                    skuPartNumber: Text(_skus.Value.skuPartNumber), 
                    enabledPrepaidUnits: Value(_skus.Value.prepaidUnits.enabled),
                    appliesTo: Text(_skus.Value.appliesTo),
                    friendlyName: LookUp(productsFriendly, skuId = Text(_skus.Value.skuId)).FriendlyName
                }
            )
        );
        
        
        
        // Set user profile 
        Set(userProfile, Office365Users.UserProfileV2(User().Email));
        
        
        // Search for Current User in PFECRMOnline, searching against job title [TEMP], will check for 'other' email first
        Set(userDetailsResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("FindMSUserInPFETenant", "{""msftUserEmail"":""" & User().Email & """ }").result));
        Set(msUserExists, If(CountRows(Table(userDetailsResponse_json.value)) > 0 , true, false));
        
        If(msUserExists, 
            Set(userMainRecord, 
                {
                    id: Text(First(Table(userDetailsResponse_json.value)).Value.id), 
                    userPrincipalName: Text(First(Table(userDetailsResponse_json.value)).Value.userPrincipalName)
                }
            );
        
            //GetUserLicenses
            Set(userLicences_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetUserLicenses", "{""userId"":""" & userMainRecord.id & """ }").result));
            Set(userLicences_Table, 
                ForAll(Table(userLicences_json.value) As _items,
                    {
                        licenseAssignmentId: Text(_items.Value.id),
                        licenseSkuId: Text(_items.Value.skuId),
                        licenseSkuPartNumber: Text(_items.Value.skuPartNumber),
                        timeAssignment: "N/A",
                        friendlyName: LookUp(productsFriendly, skuId = Text(_items.Value.skuId)).FriendlyName
                    }
                )
            );
        
            //Get User Timed Requests
            Set(userTimedRequests_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAccessRequests", "{""userId"":""" & userMainRecord.id & """ }").result));
            Set(userTimedRequests_Table, 
                ForAll(Table(userTimedRequests_json.value),
                    {
                        requestName: Text(ThisRecord.Value.msftce_name),
                        requestType: Value(ThisRecord.Value.msftce_requesttype),
                        requestLicenseSkuId: Text(ThisRecord.Value.msftce_licenseskuid),
                        requestStartDate: Text(ThisRecord.Value.msftce_startdate),
                        requestLength: Value(ThisRecord.Value.msftce_length),
                        requestEndDate: Text(ThisRecord.Value.msftce_enddate),
                        requestStateCode: Value(ThisRecord.Value.statecode)
                    }
                )
            );
        
            //GetRoleAssignmentOfUser
            Set(userAssignments_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetRoleAssignmentOfUser", "{""userId"":""" & userMainRecord.id & """ }").result));
            Set(userAssignments_Table, 
                ForAll(Table(userAssignments_json.value),
                    {
                        roleAssignmentId: Text(ThisRecord.Value.id),
                        principalId: Text(ThisRecord.Value.principalId),
                        roleDefinitionId: Text(ThisRecord.Value.roleDefinitionId),
                        roleDisplayName: Text(ThisRecord.Value.roleDefinition.displayName),
                        timeAssignment: "false"
                    }
                )
            );
        
            // Get User - Azure Resource Groups Available
          //  ClearCollect(userResourceGroups, Blank());
          //  Set(payloadString, "{""subscriptionId"":""" & "2b36de05-257f-4f45-bd99-1daebb70d74c" & ""","
           // & """principalId"":""" & "f89e1b16-63fb-4b09-b8e8-0a859966a74c" & """}");
            
        //Set(userRBACassignments_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAzureRBACRolesOfUser",payloadString).result));
        
        
                ForAll(allAzureSubscriptions_json As _subscriptions,
            //Collect(allResourceGroups, "")
            Collect(allResourceGroups,
                ForAll(Table(ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAllResourceGroupsInSubscription", "{""subscriptionId"":""" & _subscriptions.id & """ }").result).value) As _groups,
                    {
                        id : Text(_groups.Value.id),
                        name: Text(_groups.Value.name),
                        susbcriptionId: Text(_subscriptions.id),
                        subscriptionName: Text(_subscriptions.displayName)
                    }
                )
            )
        );
        
        ClearCollect(userResourceGroups, Blank());
               ForAll(allAzureSubscriptions_json As _subscriptions,
            Collect(userResourceGroups,
                ForAll(
                    Table(
                        ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("GetAzureRBACRolesOfUser", "{""subscriptionId"":""" & _subscriptions.id & ""","
            & """principalId"":""" & userMainRecord.id & """}").result).value
                    ) As _roles, If ("resourceGroups" in Text(_roles.Value.properties.scope) And "b24988ac-6180-42a0-ab88-20f7382dd24c" in Text(_roles.Value.properties.roleDefinitionId),
                    {
                        id: Text(_roles.Value.id),
                        groupName: Substitute(Text(_roles.Value.properties.scope), "/subscriptions/" & _subscriptions.id &  "/resourceGroups/" , "")
                        //id : Text(_groups.Value.id),
                        //name: Text(_groups.Value.name),
                        //susbcriptionId: Text(_subscriptions.id),
                        //subscriptionName: Text(_subscriptions.displayName)
                    })
                )
            )
        );
            
        
        
        );
        
        
        
        
        // Retrieve all SKUS
        //Set(availableSKUs_table_2, 
        //    ForAll(Table(ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("AvailableSKUs", "{}").result).value) As _skus, 
        //        { capabilityStatus: Text(_skus.Value.capabilityStatus),   //Text(ThisRecord.Value.capabilityStatus), 
        //            consumedUnits: Value(_skus.Value.consumedUnits),
        //            skuId: Text(_skus.Value.skuId), 
        //            skuPartNumber: Text(_skus.Value.skuPartNumber), 
        //            enabledPrepaidUnits: Value(_skus.Value.prepaidUnits.enabled),
        //            appliesTo: Text(_skus.Value.appliesTo)
         //       }
         //   )
        //);
        

    Host As hostControl.DefaultHostControlVariant:
        OnCancel: =false
        OnEdit: =false
        OnNew: =false
        OnSave: =false
        OnView: =false

