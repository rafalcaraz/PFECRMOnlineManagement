MainScreen As screen:
    Fill: =RGBA(237, 237, 237, 1)
    OnVisible: |-
        =With( {licencesArea: LookUp(appActions_loaded, displayName = "Licenses & Roles")}, 
            If(msUserExists And licencesArea.loaded = false,
                //Notify("Trying to load area" & AppNavigationSection.Selected.displayName  & " for first time stuff...", NotificationType.Success,1000);
                Set(areaToLoad, "Licenses & Roles");
                //Patch(selectedOption, {loaded: true});
                Patch(appActions_loaded, licencesArea, {loaded: true});
                Trace("Area Loaded", TraceSeverity.Information, { userEmail : User().Email, pfeCrmOnlineUserEmail: userMainRecord.userPrincipalName, Area: "Licences & Roles"} ); 
        
            
            )
        
        );

    TextCanvas1 As Text:
        DisplayMode: =DisplayMode.Edit
        Font: =""
        FontColor: =
        FontItalic: =false
        FontStrikethrough: =false
        FontUnderline: =false
        Height: =52
        Size: =18
        Text: |-
            ="Welcome: " & User().FullName
        Width: =281
        X: =12
        Y: =12
        ZIndex: =2

    TextCanvas2 As Text:
        DisplayMode: =DisplayMode.Edit
        Font: =""
        FontColor: =
        FontItalic: =false
        FontStrikethrough: =false
        FontUnderline: =false
        Height: =124
        Size: =18
        Text: |-
            =If(
                msUserExists,
                "PFECRMOnline Email: " & userMainRecord.userPrincipalName,
                "No account on PFECRMOnline Tenant was found tied to : " & User().Email & 
                "
                If you already have an account in PFECRMOnline, 'Link Account'.
                If not, click on Onboard 'New User'
                ")
        Width: =846
        X: =12
        Y: =54
        ZIndex: =3

    "AppNavigationSection As 'Tab list'.pcfdataset":
        DefaultSelectedItems: =
        DisplayMode: =If(sectionLoader.visible, DisplayMode.Disabled, DisplayMode.Edit)
        Font: =""
        FontItalic: =false
        FontSize: =0
        FontStrikethrough: =false
        FontUnderline: =false
        FontWeight: =""
        Height: =70
        Items: |-
            =//Filter(appActions, admin = true Or (auth = false And ready = true) Or   (auth = true And msUserExists And ready = true) )//  Or (auth = msUserExists And ready = true))
            //Filter(appActions, If(!ready, false, If((admin And isAdmin) || (auth And msUserExists) || !auth, true, false)  ) = true)
            
            Filter(appActions,
               If( ready,
                    If(admin,
                        If(isAdmin, true, false),
                        If(auth,
                            If(msUserExists, true, false),
                            If(displayName = "Link Account" And msUserExists,
                                false,
                                true
                            )
                        )
                    ),
                    false
            
               ) = true
            
            )
        OnChange: |-
            =
            With( {curAreaSetting: LookUp(appActions_loaded, displayName = AppNavigationSection.Selected.displayName)}, 
                If(curAreaSetting.loaded = false,
            
                    Set(areaToLoad, AppNavigationSection.Selected.displayName);
            
                    Patch(appActions_loaded, curAreaSetting, {loaded: true});
             
                
                )
            
            );
            
            //Additional Resets
            Set(tempPassword, "");
        OnSelect: =false
        Width: =1366
        X: =0
        Y: =183
        ZIndex: =4

        displayName1 As pcfDataField.textualColumn:
            FieldDisplayName: ="displayName"
            FieldName: ="displayName"
            FieldType: ="s"
            FieldVariantName: ="textualColumn"
            Order: =1
            ZIndex: =12

    Label3 As label:
        Height: =34
        Text: ="v3"
        Width: =43
        X: =1323
        ZIndex: =14

    TextCanvas24 As Text:
        DisplayMode: =DisplayMode.Edit
        FontColor: =
        Height: =32
        Text: =Gallery1.Selected.Id
        Width: =586
        X: =438
        Y: =19
        ZIndex: =19

    HelperComponents As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =24

        ControlsResetter_1 As ControlsResetter:
            currentArea: =AppNavigationSection.Selected.displayName
            Height: =107
            Visible: =false
            Width: =188
            X: =1178
            Y: =92
            ZIndex: =7

        FunctionsGroupHelper_1 As FunctionsGroupHelper:
            functionName: =callFunction
            Height: =94
            Visible: =false
            Width: =273
            X: =904
            Y: =104
            ZIndex: =9

        AppLoaders_1 As AppLoaders:
            areaToLoad: =areaToLoad
            Height: =147
            Width: =258
            X: =843
            Y: =51
            ZIndex: =13

    ContainersGroup As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =25

        SectionTemplate As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Licences & Roles"
            Width: =1366
            Y: =248
            ZIndex: =1

        LicensesAndRoles As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Licenses & Roles"
            Width: =1366
            Y: =248
            ZIndex: =5

            MyAdminRolesLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =30
                Size: =18
                Text: |-
                    ="My Admin Role Assignments:"
                Weight: ='TextCanvas.Weight'.Regular
                Width: =342
                X: =8
                Y: =16
                ZIndex: =1

            MyLicensesLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =29
                Size: =18
                Text: |-
                    ="My Licences:"
                Width: =253
                X: =8
                Y: =283
                ZIndex: =2

            LicensesTable As dataTable.datatable:
                BorderStyle: =BorderStyle.Solid
                DisplayMode: =DisplayMode.Edit
                Fill: =RGBA(0, 0, 0, 0)
                Height: =190
                Items: =userLicences_Table
                Width: =631
                X: =14
                Y: =317
                ZIndex: =4

                friendlyName_Column1 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="Name"
                    FieldName: ="friendlyName"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =1
                    Text: =ThisItem.friendlyName
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =6

                timeAssignment_Column2 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="Expiration Details"
                    FieldName: ="timeAssignment"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =2
                    Text: |-
                        =With(LookUp(userTimedRequests_Table, ThisItem.licenseSkuId = requestLicenseSkuId) As _record, 
                            If(IsBlank(_record), "No Expiry", _record.requestEndDate)
                        )
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =7

            "LicenesAndRolesNavigation As 'Tab list'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =56
                Items: =["Assign License", "Assign Global Admin Role", "Reset Password", "Reset MFA"]//, "Request License", "Test Account"]
                OnChange: |-
                    =Set(findUserResponse_json, Blank());
                    Set(userNotFound, true);
                    Set(tempPassword, "");
                Width: =653
                X: =684
                Y: =16
                ZIndex: =6

            AssignLicenseContainer As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.Regular
                Height: =422
                Visible: =LicenesAndRolesNavigation.Selected.Value = "Assign License"
                Width: =641
                X: =696
                Y: =85
                ZIndex: =7

                currentUserToggle As Toggle:
                    BasePaletteColor: =
                    Checked: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    Label: =If(currentUserToggle.Checked, "Other User", "Current User")
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =191
                    X: =12
                    Y: =16
                    ZIndex: =1

                "availableLicensesGallery As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver5.0'":
                    DelayItemLoading: =true
                    Fill: =RGBA(204, 231, 246, 1)
                    Height: =247
                    Items: =Search(Filter(availableSKUs_table_2, appliesTo = "User"), searchLicenseInput.Value, "friendlyName")
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =116
                    Width: =271
                    X: =24
                    Y: =156
                    ZIndex: =1

                    Title2 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =75
                        OnSelect: =Select(Parent)
                        Overflow: =Overflow.Scroll
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: =ThisItem.friendlyName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =217
                        X: =4
                        Y: =8
                        ZIndex: =1

                    Subtitle2 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =18
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: |-
                            ="Consumed: " & ThisItem.consumedUnits
                        VerticalAlign: =VerticalAlign.Top
                        Width: =113
                        X: =Title2.X
                        Y: =86
                        ZIndex: =2

                    Body1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =19
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: |-
                            ="Available: " & (ThisItem.enabledPrepaidUnits - ThisItem.consumedUnits)
                        VerticalAlign: =VerticalAlign.Top
                        Width: =142
                        X: =117
                        Y: =86
                        ZIndex: =3

                    NextArrow2 As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        Color: =RGBA(166, 166, 166, 1)
                        Height: =50
                        Icon: =Icon.Add
                        OnSelect: |
                            =Select(Parent);
                            If(
                                IsBlank(
                                    LookUp(
                                        licensesSelected,
                                        skuId = availableLicensesGallery.Selected.skuId
                                    )
                                ) = true And IsBlank(
                                    LookUp(
                                        userLicences_Table,
                                        licenseSkuId = availableLicensesGallery.Selected.skuId
                                    )
                                ) = true And ThisItem.enabledPrepaidUnits <> 0
                                And ((ThisItem.enabledPrepaidUnits - ThisItem.consumedUnits) <> 0),
                                Collect(
                                    licensesSelected,
                                    availableLicensesGallery.Selected
                                )
                            );
                        PaddingBottom: =16
                        PaddingLeft: =16
                        PaddingRight: =16
                        PaddingTop: =16
                        Tooltip: ="View item details"
                        Width: =50
                        X: =Parent.TemplateWidth - Self.Width - 12
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =4

                    Separator2 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =5

                    Rectangle2 As rectangle:
                        Height: =Parent.TemplateHeight - Separator2.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =6

                "licensesToAdd As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
                    DelayItemLoading: =true
                    Fill: =RGBA(204, 231, 246, 1)
                    Height: =247
                    Items: =licensesSelected
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =80
                    Width: =271
                    X: =332
                    Y: =156
                    ZIndex: =1

                    Title3 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.friendlyName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.TemplateWidth - 86
                        X: =16
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =1

                    NextArrow3 As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        Color: =RGBA(166, 166, 166, 1)
                        Height: =50
                        Icon: =Icon.CancelBadge
                        OnSelect: =Remove(licensesSelected, ThisItem)
                        PaddingBottom: =12
                        PaddingLeft: =12
                        PaddingRight: =12
                        PaddingTop: =12
                        Tooltip: ="View item details"
                        Width: =50
                        X: =Parent.TemplateWidth - Self.Width - 12
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =2

                    Separator3 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =3

                    Rectangle3 As rectangle:
                        Height: =Parent.TemplateHeight - Separator3.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =4

                "UPNInput As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    ValidationState: ="None"
                    Visible: =If(currentUserToggle.Checked, true, false)
                    Width: =110
                    X: =168
                    Y: =16
                    ZIndex: =2

                domainLabel As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =30
                    Text: ="@pfecrmonline.onmicrosoft.com"
                    Visible: =If(currentUserToggle.Checked, true, false)
                    Width: =207
                    X: =278
                    Y: =16
                    ZIndex: =3

                findUserButton As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |
                        =Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Licenses & Roles", control: "FindUserLicense", pfeCrmOnlineUser: UPNInput.Value & "@pfecrmonline.onmicrosoft.com"} );
                        
                        Set(findUserResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","FindUser", "{""userEmail"":""" & UPNInput.Value & "@pfecrmonline.onmicrosoft.com" & """ }").result));
                        Set(userNotFound, If(IsBlank(Text(findUserResponse_json.id)), true, false));
                    Text: ="Find"
                    Visible: =If(currentUserToggle.Checked, true, false)
                    Width: =96
                    X: =521
                    Y: =16
                    ZIndex: =4

                targetUserLabel As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =47
                    Text: |-
                        ="Target User: " & If(currentUserToggle.Checked, If(userNotFound, "USER NOT FOUND", Text(findUserResponse_json.displayName)) , userMainRecord.userPrincipalName)
                    Width: =306
                    X: =12
                    Y: =53
                    ZIndex: =5

                "searchLicenseInput As 'Text input'":
                    AccessibleLabel: =""
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Placeholder: ="Search for licences..."
                    ValidationState: ="None"
                    Width: =283
                    X: =12
                    Y: =108
                    ZIndex: =6

                expirationDropdown As Dropdown.pcfdataset:
                    DefaultSelectedItems: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    Items: =["1","2","3","4","5","6","7","No Expiration"]
                    ValidationState: ="None"
                    Width: =123
                    X: =451
                    Y: =68
                    ZIndex: =7

                expirationDaysLabel As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =40
                    Text: |-
                        ="Expiration (Days):"
                    Width: =118
                    X: =333
                    Y: =60
                    ZIndex: =8

                assignButton As Button:
                    BasePaletteColor: =
                    DisplayMode: |-
                        =If(CountRows(licensesSelected) = 0,
                         DisplayMode.Disabled,
                        If(IsBlank(expirationDropdown.Selected) = false, 
                            If(currentUserToggle.Checked = false,
                                DisplayMode.Edit,
                                If(userNotFound = false,
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled)),
                            DisplayMode.Disabled))
                        
                            
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |-
                        =
                        
                        
                        //AddRemoveLicense
                        //Add licenses string format
                        Set(addLicenses_stringFormat, Concat(licensesSelected, "{""skuId"":""" & ThisRecord.skuId &  """" & "},"));
                        Set(addLicenses_friendly_stringFormat, Concat(licensesSelected, "{""skuName"":""" & ThisRecord.friendlyName &  """" & "},"));
                        
                        //Remove licences string format TODO
                        Set(removeLicenses_stringFormat, "");
                        
                        Set(payloadString, 
                            "{""userId"":""" & If(currentUserToggle.Checked, If(userNotFound = false, Text(findUserResponse_json.id), "NULL"), userMainRecord.id) 
                            & """,""addLicenses"": [" & Left( addLicenses_stringFormat, Len(addLicenses_stringFormat) -1 ) 
                            & "], ""removeLicenses"":[" & removeLicenses_stringFormat & "]," 
                            & """addLicensesFriendly"": [" & Left( addLicenses_friendly_stringFormat, Len(addLicenses_friendly_stringFormat) -1 ) & "],"
                            & """expirationRequired"":" & If(expirationDropdown.Selected.Value = "No Expiration", false, true) & ","
                            & """expirationLength"":""" & expirationDropdown.Selected.Value & ""","
                            & """expirationLengthUnitInDays"":""" & appSettings.licenseDurationInDays & """"
                            & " }");
                        
                        
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Licenses & Roles", control: "AssignUserLicense", payload: payloadString});
                        
                        Set(addRemoveLicences_json, ParseJSON(
                            'Temp-TestingNewFlowForIncomingRequests'.Run("Licenses","AddRemoveLicense", payloadString).result)
                        );
                    Text: ="Assign"
                    Width: =96
                    X: =336
                    Y: =108
                    ZIndex: =9

            myRoleAssignmentsRefreshIcon As icon.Reload:
                Height: =32
                Icon: =Icon.Reload
                OnSelect: |+
                    =Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Licenses & Roles", control: "Refresh Admin Role Assignments"} );
                    
                    
                    Set(callFunction, "RefreshUserRoleAssignments")
                    
                Width: =41
                X: =604
                Y: =14
                ZIndex: =8

            myLicensesRefreshIcon As icon.Reload:
                Height: =32
                Icon: =Icon.Reload
                OnSelect: |-
                    =Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Licenses & Roles", control: "Refresh My Licenses"} );
                    
                    Set(callFunction, "RefreshUserLicenses")
                Width: =41
                X: =604
                Y: =280
                ZIndex: =9

            AssignRoleContainer As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.Regular
                Height: =422
                Visible: =LicenesAndRolesNavigation.Selected.Value = "Assign Global Admin Role"
                Width: =641
                X: =696
                Y: =85
                ZIndex: =10

                currentUserToggle_1 As Toggle:
                    BasePaletteColor: =
                    Checked: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    Label: =If(currentUserToggle_1.Checked, "Other User", "Current User")
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =191
                    X: =12
                    Y: =16
                    ZIndex: =1

                "UPNInput_1 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    ValidationState: ="None"
                    Visible: =currentUserToggle_1.Checked
                    Width: =110
                    X: =168
                    Y: =16
                    ZIndex: =2

                domainLabel_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =30
                    Text: ="@pfecrmonline.onmicrosoft.com"
                    Visible: =currentUserToggle_1.Checked
                    Width: =207
                    X: =278
                    Y: =16
                    ZIndex: =3

                findUserButton_1 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |
                        =Set(findUserResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "FindUser", "{""userEmail"":""" & UPNInput_1.Value & "@pfecrmonline.onmicrosoft.com" & """ }").result));
                        Set(userNotFound, If(IsBlank(Text(findUserResponse_json.id)), true, false));
                    Text: ="Find"
                    Visible: =currentUserToggle_1.Checked
                    Width: =96
                    X: =521
                    Y: =16
                    ZIndex: =4

                targetUserLabel_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =47
                    Text: |-
                        ="Target User: " & If(currentUserToggle_1.Checked, If(userNotFound, "USER NOT FOUND", Text(findUserResponse_json.displayName)) , userMainRecord.userPrincipalName)
                    Width: =306
                    X: =12
                    Y: =53
                    ZIndex: =5

                expirationDropdown_1 As Dropdown.pcfdataset:
                    DefaultSelectedItems: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    Items: =["1","2","3","4","5","6","7", "8"]
                    Required: =true
                    ValidationState: ="None"
                    Width: =123
                    X: =451
                    Y: =68
                    ZIndex: =7

                expirationDaysLabel_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =40
                    Text: |-
                        ="Expiration (Hours):"
                    Width: =118
                    X: =333
                    Y: =60
                    ZIndex: =8

                assignButton_1 As Button:
                    BasePaletteColor: =
                    DisplayMode: |-
                        =
                        If(IsBlank(expirationDropdown_1.Selected) = false,
                            If( Not(IsBlank(TextInputCanvas1)),
                                If(currentUserToggle_1.Checked = false,
                                    // If current user is already global admin add again
                                    If(isGlobalAdmin, DisplayMode.Disabled, DisplayMode.Edit),
                                    
                                    If(userNotFound = false,
                                        DisplayMode.Edit,
                                        DisplayMode.Disabled)),
                                DisplayMode.Disabled
                            ),
                            DisplayMode.Disabled
                        )
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |+
                        =
                        //AddRemoveLicense
                        //Add licenses string format
                        Set(addLicenses_stringFormat, Concat(licensesSelected, "{""skuId"":""" & ThisRecord.skuId &  """" & "},"));
                        
                        //Remove licences string format TODO
                        Set(removeLicenses_stringFormat, "");
                        
                        Set(payloadString, 
                            "{""pfeCrmOnlineUserId"":""" & If(currentUserToggle_1.Checked, If(userNotFound = false, Text(findUserResponse_json.id), "NULL"), userMainRecord.id)  & ""","
                            & """justification"":""" & TextInputCanvas1.Value & ""","//If(expirationDropdown_1.Selected.Value = "No Expiration", false, true) & ","
                            & """roleToAdd"":""" & LookUp(AzureRoles, RoleName = "Global Admin").RoleId & ""","
                            & """duration"":""" & expirationDropdown_1.Selected.Value & ""","
                            & """msftUserEmail"":""" & User().Email& ""","
                            & """durationUnit"":""" & If(appSettings.roleDurationInHours, "H", "M") & """"
                            & " }");
                        
                        
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Licenses & Roles", control: "AssignUserRole", payload: payloadString});
                        
                        Set(addRemoveLicences_json, ParseJSON(
                            'Temp-TestingNewFlowForIncomingRequests'.Run("Azure" ,"AddAdminRoleExpiration", payloadString).result)
                        );
                        
                    Text: ="Assign"
                    Width: =96
                    X: =336
                    Y: =108
                    ZIndex: =9

                "TextInputCanvas1 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =120
                    Mode: ='TextInputCanvas.Mode'.Multiline
                    Placeholder: ="Enter justification.."
                    Type: ='TextInputCanvas.Type'.Search
                    ValidationState: ="None"
                    Width: =320
                    X: =12
                    Y: =100
                    ZIndex: =10

                TextCanvas14 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =87
                    Text: =globalAdminExpiryMessage
                    Visible: =If(currentUserToggle_1.Checked = false And isGlobalAdmin, true, false)
                    Width: =281
                    X: =336
                    Y: =144
                    ZIndex: =11

            PowerAppsOneGrid2 As Table.pcfdataset:
                BasePaletteColor: =RGBA(214, 221, 224, 1)
                DisplayMode: =DisplayMode.Edit
                EnableAggregation: ="no"
                Font: =""
                FontSize: =0
                FontWeight: =""
                HeaderFont: =""
                HeaderFontSize: =0
                HeaderFontWeight: =""
                Height: =208
                Items: =userAssignments_Table_v2
                NoDataText: ="You dont have any roles assigned"
                ReflowBehavior: ='PowerAppsOneGrid.ReflowBehavior'.Reflow
                Width: =596
                X: =8
                Y: =59
                ZIndex: =11

                roleDisplayName1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Role Name"
                    FieldName: ="roleDisplayName"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =1
                    ZIndex: =21

                timeAssignment1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="Time Assignment"
                    FieldName: ="timeAssignment"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =2
                    ZIndex: =22

            TestAccountContainer As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.Regular
                Height: =422
                Visible: =LicenesAndRolesNavigation.Selected.Value = "Test Account"
                Width: =641
                X: =696
                Y: =85
                ZIndex: =12

                currentUserToggle_2 As Toggle:
                    BasePaletteColor: =
                    Checked: =false
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    Label: =If(currentUserToggle_2.Checked, "Other User", "Current User")
                    OnCheck: =false
                    OnUncheck: =false
                    Width: =191
                    X: =25
                    Y: =160
                    ZIndex: =1

                "availableLicensesGallery_1 As gallery.'BrowseLayout_Vertical_ThreeTextVariant_ver5.0'":
                    DelayItemLoading: =true
                    Fill: =RGBA(204, 231, 246, 1)
                    Height: =106
                    Items: =Search(Filter(availableSKUs_table_2, appliesTo = "User"), searchLicenseInput_1.Value, "friendlyName")
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =116
                    Width: =272
                    X: =25
                    Y: =295
                    ZIndex: =1

                    Title2_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =75
                        OnSelect: =Select(Parent)
                        Overflow: =Overflow.Scroll
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: =ThisItem.friendlyName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =217
                        X: =4
                        Y: =8
                        ZIndex: =1

                    Subtitle2_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =18
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: |-
                            ="Consumed: " & ThisItem.consumedUnits
                        VerticalAlign: =VerticalAlign.Top
                        Width: =113
                        X: =Title2_1.X
                        Y: =86
                        ZIndex: =2

                    Body1_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =19
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =10
                        Text: |-
                            ="Available: " & (ThisItem.enabledPrepaidUnits - ThisItem.consumedUnits)
                        VerticalAlign: =VerticalAlign.Top
                        Width: =142
                        X: =117
                        Y: =86
                        ZIndex: =3

                    NextArrow2_1 As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        Color: =RGBA(166, 166, 166, 1)
                        Height: =50
                        Icon: =Icon.Add
                        OnSelect: |
                            =Select(Parent);
                            If(
                                IsBlank(
                                    LookUp(
                                        licensesSelected,
                                        skuId = availableLicensesGallery_1.Selected.skuId
                                    )
                                ) = true And IsBlank(
                                    LookUp(
                                        userLicences_Table,
                                        licenseSkuId = availableLicensesGallery_1.Selected.skuId
                                    )
                                ) = true And ThisItem.enabledPrepaidUnits <> 0
                                And ((ThisItem.enabledPrepaidUnits - ThisItem.consumedUnits) <> 0),
                                Collect(
                                    licensesSelected,
                                    availableLicensesGallery_1.Selected
                                )
                            );
                        PaddingBottom: =16
                        PaddingLeft: =16
                        PaddingRight: =16
                        PaddingTop: =16
                        Tooltip: ="View item details"
                        Width: =50
                        X: =Parent.TemplateWidth - Self.Width - 12
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =4

                    Separator2_1 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =5

                    Rectangle2_1 As rectangle:
                        Height: =Parent.TemplateHeight - Separator2_1.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =6

                "licensesToAdd_1 As gallery.'BrowseLayout_Vertical_OneTextVariant_ver5.0'":
                    DelayItemLoading: =true
                    Fill: =RGBA(204, 231, 246, 1)
                    Height: =87
                    Items: =licensesSelected
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =80
                    Width: =270
                    X: =333
                    Y: =316
                    ZIndex: =1

                    Title3_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.friendlyName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.TemplateWidth - 86
                        X: =16
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =1

                    NextArrow3_1 As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        Color: =RGBA(166, 166, 166, 1)
                        Height: =50
                        Icon: =Icon.CancelBadge
                        OnSelect: =Remove(licensesSelected, ThisItem)
                        PaddingBottom: =12
                        PaddingLeft: =12
                        PaddingRight: =12
                        PaddingTop: =12
                        Tooltip: ="View item details"
                        Width: =50
                        X: =Parent.TemplateWidth - Self.Width - 12
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =2

                    Separator3_1 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =3

                    Rectangle3_1 As rectangle:
                        Height: =Parent.TemplateHeight - Separator3_1.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =4

                "UPNInput_2 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =30
                    ValidationState: ="None"
                    Width: =110
                    X: =181
                    Y: =160
                    ZIndex: =2

                domainLabel_2 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =30
                    Text: ="@pfecrmonline.onmicrosoft.com"
                    Width: =207
                    X: =291
                    Y: =160
                    ZIndex: =3

                findUserButton_2 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |
                        =Set(findUserResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","FindUser", "{""userEmail"":""" & UPNInput_2.Value & "@pfecrmonline.onmicrosoft.com" & """ }").result));
                        Set(userNotFound, If(IsBlank(Text(findUserResponse_json.id)), true, false));
                    Text: ="Find"
                    Width: =96
                    X: =534
                    Y: =160
                    ZIndex: =4

                targetUserLabel_2 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =47
                    Text: |-
                        ="Target User: " & If(currentUserToggle_2.Checked, If(userNotFound, "USER NOT FOUND", Text(findUserResponse_json.displayName)) , userMainRecord.userPrincipalName)
                    Width: =306
                    X: =25
                    Y: =197
                    ZIndex: =5

                "searchLicenseInput_1 As 'Text input'":
                    AccessibleLabel: =""
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Placeholder: ="Search for licences..."
                    ValidationState: ="None"
                    Width: =283
                    X: =25
                    Y: =252
                    ZIndex: =6

                expirationDropdown_2 As Dropdown.pcfdataset:
                    DefaultSelectedItems: =
                    DisplayMode: =DisplayMode.Edit
                    FontSize: =0
                    Height: =32
                    Items: =["1","2","3","4","5","6","7","No Expiration"]
                    ValidationState: ="None"
                    Width: =123
                    X: =464
                    Y: =212
                    ZIndex: =7

                expirationDaysLabel_2 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =40
                    Text: |-
                        ="Expiration (Days):"
                    Width: =118
                    X: =346
                    Y: =204
                    ZIndex: =8

                assignButton_2 As Button:
                    BasePaletteColor: =
                    DisplayMode: |-
                        =If(CountRows(licensesSelected) = 0,
                         DisplayMode.Disabled,
                        If(IsBlank(expirationDropdown_2.Selected) = false, 
                            If(currentUserToggle_2.Checked = false,
                                DisplayMode.Edit,
                                If(userNotFound = false,
                                    DisplayMode.Edit,
                                    DisplayMode.Disabled)),
                            DisplayMode.Disabled))
                        
                            
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |-
                        =
                        //AddRemoveLicense
                        //Add licenses string format
                        Set(addLicenses_stringFormat, Concat(licensesSelected, "{""skuId"":""" & ThisRecord.skuId &  """" & "},"));
                        
                        //Remove licences string format TODO
                        Set(removeLicenses_stringFormat, "");
                        
                        Set(payloadString, 
                            "{""userId"":""" & If(expirationDropdown_2.Selected.Value, If(userNotFound = false, Text(findUserResponse_json.id), "NULL"), userMainRecord.id) 
                            & """,""addLicenses"": [" & Left( addLicenses_stringFormat, Len(addLicenses_stringFormat) -1 ) 
                            & "], ""removeLicenses"":[" & removeLicenses_stringFormat & "],"  
                            & """expirationRequired"":" & If(expirationDropdown_2.Selected.Value = "No Expiration", false, true) & ","
                            & """expirationLength"":""" & expirationDropdown_2.Selected.Value & ""","
                            & """expirationLengthUnitInDays"":""" & appSettings.licenseDurationInDays & """"
                            & " }");
                        
                        
                        Set(addRemoveLicences_json, ParseJSON(
                            'Temp-TestingNewFlowForIncomingRequests'.Run("Licenses","AddRemoveLicense", payloadString).result)
                        );
                        
                        Notify("Clicked on assign", NotificationType.Success, 2000);
                    Text: ="Assign"
                    Width: =96
                    X: =349
                    Y: =252
                    ZIndex: =9

                "TextInputCanvas3 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Width: =320
                    X: =13
                    Y: =18
                    ZIndex: =10

            ResetPasswordContainer As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.Regular
                Height: =422
                Visible: =LicenesAndRolesNavigation.Selected.Value = "Reset Password"
                Width: =641
                X: =696
                Y: =85
                ZIndex: =13

                ResetPasswordButton As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |+
                        =Set(tempPassword, "Fargoctslabs!" & RoundDown(Rand() * 1000000,0));
                        ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","ResetPassword", "{""pfeCrmOnlineUserId"":""" & userMainRecord.id  & """,""password"":""" & tempPassword & """ }").result);
                        
                    Text: ="Reset"
                    Width: =96
                    X: =15
                    Y: =123
                    ZIndex: =4

                TextCanvas23 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =44
                    Text: |-
                        ="This will generate a new password for: " & userMainRecord.userPrincipalName
                    Width: =585
                    X: =15
                    Y: =35
                    ZIndex: =10

                TextCanvas23_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =44
                    Text: ="You will be prompted to change your password afterwards"
                    Width: =585
                    X: =15
                    Y: =67
                    ZIndex: =11

                TextCanvas25 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =32
                    Text: |-
                        ="Your Password is: "
                    Visible: ="Fargoctslabs!" in tempPassword
                    Width: =123
                    X: =133
                    Y: =123
                    ZIndex: =12

                TextCanvas25_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =32
                    Text: =tempPassword
                    Visible: ="Fargoctslabs!" in tempPassword
                    Weight: ='TextCanvas.Weight'.Bold
                    Width: =231
                    X: =256
                    Y: =123
                    ZIndex: =13

            ResetMFAContainer As groupContainer.manualLayoutContainer:
                DropShadow: =DropShadow.Regular
                Height: =422
                Visible: =LicenesAndRolesNavigation.Selected.Value = "Reset MFA"
                Width: =641
                X: =696
                Y: =85
                ZIndex: =14

                ResetMFA As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |+
                        =
                        
                        
                        //ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","ResetPassword", "{""pfeCrmOnlineUserId"":""" & userMainRecord.id  & """,""password"":""" & tempPassword & """ }").result);
                        
                    Text: ="Reset MFA"
                    Width: =96
                    X: =15
                    Y: =219
                    ZIndex: =4

                TextCanvas23_2 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =44
                    Text: |-
                        ="This will reset MFA process for account: " & userMainRecord.userPrincipalName
                    Width: =585
                    X: =15
                    Y: =90
                    ZIndex: =10

                TextCanvas23_3 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =44
                    Text: ="You will be prompted to go through the MFA registration process again"
                    Width: =585
                    X: =15
                    Y: =134
                    ZIndex: =11

                TextCanvas25_2 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =32
                    Text: |-
                        ="Your Password is: "
                    Visible: ="Fargoctslabs!" in tempPassword
                    Width: =123
                    X: =133
                    Y: =123
                    ZIndex: =12

                TextCanvas25_3 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =32
                    Text: =tempPassword
                    Visible: ="Fargoctslabs!" in tempPassword
                    Weight: ='TextCanvas.Weight'.Bold
                    Width: =231
                    X: =256
                    Y: =123
                    ZIndex: =13

                TextCanvas23_4 As Text:
                    DisplayMode: =DisplayMode.Edit
                    FontColor: =
                    Height: =44
                    Text: ="In order to access Azure Portal. MFA is now enforced. In case you need to reset MFA auth process (i.e. new phone number, new device, etc) you can do so here."
                    Width: =585
                    X: =15
                    Y: =30
                    ZIndex: =14

        OnboardNewUser As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Onboard New User"
            Width: =1366
            Y: =248
            ZIndex: =6

            microsoftEmailLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =44
                Text: |-
                    ="Enter Microsoft Email:"
                Width: =211
                X: =12
                Y: =24
                ZIndex: =1

            "microsoftEmailInput As 'Text input'":
                Align: ="Start"
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                Placeholder: ="Enter Microsoft Email"
                ValidationState: ="None"
                Value: =If(!msUserExists, User().Email, "")
                Width: =320
                X: =183
                Y: =30
                ZIndex: =2

            validateUserButton As Button:
                BasePaletteColor: =
                DisplayMode: =If(IsBlank(microsoftEmailInput.Value),DisplayMode.Disabled, DisplayMode.Edit)
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                OnSelect: |-
                    =Set(userSearched, microsoftEmailInput.Value);
                    Set(validUser_json, ParseJSON(ValidateADUser.Run(userSearched).validuser));
                    If(Boolean(validUser_json.validMSUser), 
                        // True condition
                        Notify("MS user is valid", NotificationType.Success, 2000);
                        
                        Set(payloadJson, {userEmail: Text(validUser_json.email),
                                          userUPN: Text(validUser_json.upn)
                                        } 
                        );
                        //Set(validateUserInPFE, PFECRMOnlineHelper.PerformAction({Area:"UserMaintenance" ,Operation:"ValidateUser",Parameters: ParseJSON(JSON(payloadJson))} ));
                    
                        //Set(payloadString, "{""userEmail"":"""  & Text(validUser_json.email) & """,""userUPN"":""" & Text(validUser_json.upn) & """}");
                        //Set(validateUserInPFE, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "ValidateUser", payloadString).result));
                        Set(validateUserInPFE, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "ValidateUser", JSON(payloadJson)).result));
                    
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Onboard New User", control: "FindUser", payload: {message: payloadJson, result: Boolean(validateUserInPFE.accountInPFECRMOnlineFound)}});
                        , 
                        
                        // False condition
                        Notify("MS user provided is not valid", NotificationType.Error, 2000));
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Onboard New User", control: "FindUser", payload: {message: payloadJson, result: "UserNotFound"}});
                    
                    Set(showMessageLabel, true);
                Text: ="Validate"
                Width: =96
                X: =531
                Y: =30
                ZIndex: =3

            onboardUserMessageLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =65
                Text: |-
                    =If(Boolean(validUser_json.validMSUser) And Boolean(validateUserInPFE.accountInPFECRMOnlineFound),
                        "User " & userSearched & " already has an account associated in PFECRMOnline " & "[" & Text(validateUserInPFE.accountInPFECRMOnline) & "]",
                    
                        If(validUser_json.managerEmail in approvedManagers,  "User Doesnt Exist in PFECRMOnline. Add New User",
                        "User Does not exist in PFECRMOnline, and cannot be added since it doesnt report to one of the approved BizApps Managers"))
                Visible: =showMessageLabel
                Weight: ='TextCanvas.Weight'.Semibold
                Width: =519
                X: =12
                Y: =118
                ZIndex: =4

            OnboardNewUserButton As Button:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =37
                OnSelect: |-
                    =Set(onboardNewUser,true);
                    Set(createButtonDisabled, false);
                Text: ="Onboard New User"
                Visible: =Boolean(validUser_json.validMSUser) And !Boolean(validateUserInPFE.accountInPFECRMOnlineFound) And Boolean(validUser_json.managerEmail in approvedManagers)
                Width: =171
                X: =12
                Y: =293
                ZIndex: =6

            CreateUserButton As Button:
                BasePaletteColor: =
                DisplayMode: =If(onboardNewUser And doneCreatingUser = false, DisplayMode.Edit, DisplayMode.Disabled)
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =33
                OnSelect: |+
                    =Set(tempPassword, "Fargoctslabs!" & RoundDown(Rand() * 1000000,0));
                    
                    Set(microsoftEmails,  Text(validUser_json.upn) ); // Set upn
                    Set(microsoftEmails, microsoftEmails & If(Text(validUser_json.upn) = Text(validUser_json.email), "", "," & Text(validUser_json.email)));
                    
                    //Add licenses string format
                        ClearCollect(baseLicenses, [LookUp(productsFriendly, FriendlyName = "Dynamics 365 for Customer Service Enterprise Edition").skuId]);
                        Set(addLicenses_stringFormat, Concat(baseLicenses,  "{""skuId"":""" & ThisRecord.Value & """}",   ","));
                    
                    Set(payloadString, "{" &
                    """displayName"":"""   & Text(validUser_json.displayName) & """," &
                    """userName"":"""   & Substitute(preferedLoginRadio.Selected.Value, "@pfecrmonline.onmicrosoft.com", "") & """," &
                    """password"":""" & tempPassword & """," &
                    //"""microsoftEmails"":" & "[" & microsoftEmails & "]," & 
                    """microsoftEmails"":" & """" & microsoftEmails & """," & 
                    """licensesToAdd"":[" &  addLicenses_stringFormat  & "]," &
                    """roleToAdd"":" & """" & If(appSettings.automaticallyAssignGlobalAdmin,LookUp(AzureRoles, RoleName = "Global Admin").RoleId, LookUp(AzureRoles, RoleName = "Power Platform Admin").RoleId) & """," &
                    """msftEmailForNotification"":""" & userSearched & """" &
                    "}");
                    
                    Set(doneCreatingUser, false);
                    Set(userCreated_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "CreateUser", payloadString).result));
                    Set(doneCreatingUser, true);
                    
                    Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Onboard New User", control: "CreateUser", payload: {message: payloadString}});
                    
                    If(IsBlank(Text(userCreated_json.id)) = false,
                        // ***  TRUE CONDITION ***
                        Notify("Setting up the account, an email will be sent to: " & microsoftEmailInput.Value & " with additional instructions", NotificationType.Success); 
                        Set(userAccountCreatedSuccesfully, true);
                        
                    
                        //Disable the create button temporary
                        Set(createButtonDisabled, true); Set(showTempPassword, true);
                    
                    
                        , 
                        // ***  FALSE CONDITION ***    
                        Notify("Something went wrong creating your account... please contact Rafael Lopez Alcaraz at ralop@microsoft.com", NotificationType.Error)
                    );
                    
                    
                    
                Text: ="Create User"
                Visible: =onboardNewUser
                Width: =147
                X: =36
                Y: =448
                ZIndex: =7

            selectPreferedLoginLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =35
                Text: |-
                    ="Select Prefered Login:"
                Visible: =onboardNewUser
                Width: =267
                X: =24
                Y: =356
                ZIndex: =8

            preferedLoginRadio As Radio.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =74
                Items: =[Substitute(Text(validUser_json.email),"@microsoft.com","@pfecrmonline.onmicrosoft.com"), Substitute(Text(validUser_json.upn),"@microsoft.com","@pfecrmonline.onmicrosoft.com")]
                Visible: =onboardNewUser
                Width: =430
                X: =197
                Y: =341
                ZIndex: =9

            tempPasswordLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =55
                Text: |-
                    ="Your temp password is: " & tempPassword & " , you will be prompted to change password after login"
                Visible: =showTempPassword
                Width: =591
                X: =12
                Y: =196
                ZIndex: =10

        LinkAccountContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Link Account"
            Width: =1366
            Y: =248
            ZIndex: =8

            "UserNameToFindInput As 'Text input'":
                Align: ="Start"
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                Placeholder: ="Enter Username to find"
                ValidationState: ="None"
                Width: =320
                X: =40
                Y: =40
                ZIndex: =1

            UserNameTextLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =32
                Text: ="@pfecrmonline.onmicrosoft.com"
                Width: =213
                X: =371
                Y: =40
                ZIndex: =2

            FindButton As Button:
                BasePaletteColor: =
                DisplayMode: =If(IsBlank(UserNameToFindInput),DisplayMode.Disabled,DisplayMode.Edit)
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                OnSelect: |-
                    =
                    
                    //Set(payloadString, "{" &
                    //"""pfeCrmOnlineEmail"":""" & Substitute(UserNameToFindInput.Value, " ", "") & "@pfecrmonline.onmicrosoft.com" & """" &
                    //"}");
                    
                    Set(loadSpinner, {name: "Find", show: true, X: FindButton.X + FindButton.Width, Y: FindButton.Y -10 });
                    
                    Set(payloadJson, {pfeCrmOnlineEmail: Substitute(UserNameToFindInput.Value, " ", "") & "@pfecrmonline.onmicrosoft.com"} );
                    //Set(userSearch_json, PFECRMOnlineHelper.PerformAction({Area:"UserMaintenance" ,Operation:"GetUserDetails",Parameters: ParseJSON(JSON(payloadJson))} ));
                    Set(userSearch_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","GetUserDetails", JSON(payloadJson)).result));
                    //Set(userSearch_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance","GetUserDetails", payloadString).result));
                    Set(loadSpinner, {name: "Find", show: false, X: FindButton.X + FindButton.Width, Y: FindButton.Y -10 });
                    
                    Set(userFound, !IsBlank(Text(userSearch_json.id)));
                    If(userFound, Notify("User was found ✅", NotificationType.Success), Notify("User was not found ❌", NotificationType.Error));
                    If(IsBlank(userSearch_json.customSecurityAttributes.PFECRMOnlineExtensions.microsoftEmails) = false 
                        And CountRows(Table(userSearch_json.customSecurityAttributes.PFECRMOnlineExtensions.microsoftEmails)) > 0, 
                        Set(isAccountLinked, true),
                        Set(isAccountLinked, false)
                    );
                    
                    //Set(isAccountLinked, CountRows(Table(userSearch_json.otherMails)) > 0);
                    Set(isUserSearched, true);
                Text: ="Find"
                Width: =96
                X: =40
                Y: =102
                ZIndex: =3

            LinkAccountButton As Button:
                BasePaletteColor: =
                DisplayMode: =If(userFound And !isAccountLinked, DisplayMode.Edit, DisplayMode.Disabled)
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =33
                OnSelect: |-
                    =Set(loadSpinner, {name: "Link", show: true, X: LinkAccountButton.X + LinkAccountButton.Width, Y: LinkAccountButton.Y -10 });
                    
                    Set(curUserAdDetails, ParseJSON(ValidateADUser.Run(User().Email).validuser));
                    //Set(emailsArray, "[""" & If(Text(curUserAdDetails.upn) = Text(curUserAdDetails.email), Text(curUserAdDetails.upn) & """", Text(curUserAdDetails.upn) & """,""" & Text(curUserAdDetails.email) & """") & "]");
                    Set(emailsArray,  If(Text(curUserAdDetails.upn) = Text(curUserAdDetails.email), Text(curUserAdDetails.upn) , Text(curUserAdDetails.upn) & "," & Text(curUserAdDetails.email) ));
                    
                    
                    //Set(payloadJson, {pfeCrmOnlineUserId: Text(userSearch_json.id),
                    //                  emailsToLink: emailsArray//JSON(emailsArray)
                    //                } 
                    //);
                    
                    //PFECRMOnlineHelper.PerformAction({Area:"UserMaintenance" ,Operation:"LinkUser",Parameters: ParseJSON(Text(JSON(payloadJson)))} );
                    
                    Set(payloadString, 
                            "{""pfeCrmOnlineUserId"":""" & Text(userSearch_json.id) & ""","
                            & """emailsToLink"":""" & emailsArray & """}"
                        );
                    
                    //PFECRMOnlineHelper.PerformAction({Area:"UserMaintenance" ,Operation:"LinkUser",Parameters: ParseJSON(payloadString)} );
                    'Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "LinkUser", payloadString);
                    
                    //'Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "LinkUser", payloadString);
                    Set(userAccountLinkedSuccesfully, true);
                    Notify("User account linked succesfully", NotificationType.Success);
                    
                    Set(timerStart, true)
                    
                    
                    //userSearchJson, userFound(false), isAccountLinked(false), isUserSearched(false)
                    // curUserAdDetails, userAccountLinkedSuccesfully
                Text: ="Link Account"
                Width: =158
                X: =40
                Y: =172
                ZIndex: =4

            linkAccountLoadSpinner As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =55
                SpinnerSize: ='Spinner.SpinnerSize'.Small
                Visible: =loadSpinner.show
                Width: =62
                X: =loadSpinner.X
                Y: =loadSpinner.Y
                ZIndex: =5

            delayTimer As timer:
                Duration: =15000
                OnTimerEnd: |-
                    =Set(timerStart, false);
                    
                    Set(userDetailsResponse_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "FindMSUserInPFETenant", "{""msftUserEmail"":""" & User().Email & """ }").result));
                    Set(msUserExists, If(CountRows(Table(userDetailsResponse_json.value)) > 0 , true, false));
                    
                    If(msUserExists, 
                        Set(userMainRecord, 
                            {
                                id: Text(First(Table(userDetailsResponse_json.value)).Value.id), 
                                userPrincipalName: Text(First(Table(userDetailsResponse_json.value)).Value.userPrincipalName)
                            }
                        )
                    );
                    
                    Set(loadSpinner, {name: "Link", show: false, X: LinkAccountButton.X + LinkAccountButton.Width, Y: LinkAccountButton.Y -10 });
                    
                    //Set(callFunction, "RetrieveAllUserInfo");
                    
                    With( {curAreaSetting: LookUp(appActions_loaded, displayName = "Licenses & Roles")}, 
                        If(curAreaSetting.loaded = false,
                            Set(areaToLoad, "Licenses & Roles");
                            Patch(appActions_loaded, curAreaSetting, {loaded: true});
                        
                        )
                    
                    );
                Start: =timerStart
                Visible: =false
                X: =38
                Y: =282
                ZIndex: =7

            TextCanvas17 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =48
                Text: ="Please wait as things get loaded..."
                Visible: =timerStart
                Width: =296
                X: =264
                Y: =173
                ZIndex: =8

        AzureResourcesContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Azure Resources"
            Width: =1366
            Y: =248
            ZIndex: =10

            myAvailableGroupsLabel As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =39
                Size: =18
                Text: ="Available Subscriptions"
                Width: =372
                X: =729
                Y: =1
                ZIndex: =1

            Button5 As button:
                OnSelect: |-
                    =Set(azurePayload, {
                       subscriptionId: DataTable6.Selected.subscriptionId,
                       msftUserEmail: TextInputCanvas5.Value,
                       pfeCrmOnlineUserId: Text(Gallery1_2.Selected.objectId)
                    
                    });
                    
                    'Temp-TestingNewFlowForIncomingRequests'.Run("Azure","CreateResourceGroupForUser", JSON(azurePayload))
                    //PFECRMOnlineHelper.PerformAction({Area: "Azure",Operation:"CreateResourceGroupForUser",Parameters: ParseJSON(JSON(azurePayload))});
                Text: ="Create RG"
                X: =729
                Y: =466
                ZIndex: =2

            DataTable6 As dataTable.datatable:
                BorderStyle: =BorderStyle.Solid
                DisplayMode: =DisplayMode.Edit
                Fill: =RGBA(0, 0, 0, 0)
                Height: =118
                Items: =allAzureSubscriptions_pfecrmonlinemanged
                Width: =436
                X: =729
                Y: =40
                ZIndex: =3

                name_Column2 As dataTableColumn.textualColumn:
                    AutoWidth: =false
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="name"
                    FieldName: ="name"
                    FieldVariantName: ="textualColumn"
                    Height: =121
                    LayoutHeight: =Parent.Height
                    Order: =1
                    Text: =ThisItem.name
                    Width: =330
                    X: =0
                    Y: =0
                    ZIndex: =32

            "TextInputCanvas5 As 'Text input'":
                Align: ="Start"
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =39
                Placeholder: ="Enter Microsoft Alias"
                Width: =320
                X: =729
                Y: =401
                ZIndex: =4

            "Gallery1_2 As gallery.'BrowseLayout_Vertical_ThreeTextOneImageVariant_ver5.0'":
                DelayItemLoading: =true
                Height: =151
                Items: =Filter(allUsers_table_extended, TextInputCanvas2_2.Value in displayName)
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =56
                Width: =445
                X: =729
                Y: =224
                ZIndex: =7

                Title4_2 As label:
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =Self.Size * 1.8
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =11
                    Text: =ThisItem.displayName
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.TemplateWidth - 185
                    X: =4
                    Y: =6
                    ZIndex: =2

                Subtitle3_2 As label:
                    FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                    Height: =19
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =11
                    Text: =ThisItem.userPrincipalName
                    VerticalAlign: =VerticalAlign.Top
                    Width: =366
                    X: =4
                    Y: =25
                    ZIndex: =3

                Separator4_2 As rectangle:
                    Height: =8
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - Self.Height
                    ZIndex: =6

                Rectangle4_2 As rectangle:
                    Height: =Parent.TemplateHeight - Separator4_2.Height
                    OnSelect: =Select(Parent)
                    Visible: =ThisItem.IsSelected
                    Width: =4
                    ZIndex: =7

            "TextInputCanvas2_2 As 'Text input'":
                Align: ="Start"
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =34
                Placeholder: ="Search PFECRMOnline User..."
                ValidationState: ="None"
                Width: =433
                X: =729
                Y: =190
                ZIndex: =8

            PowerAppsOneGrid1 As Table.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                EnableAggregation: ="no"
                Font: =""
                FontWeight: =""
                HeaderFont: =""
                HeaderFontWeight: =""
                Height: =199
                Items: =Filter(allResourceGroups, "-resource-group" in name)
                onCellValueChange: =false
                onFilter: =false
                onNavigate: =false
                onRowSelect: =false
                onSave: =false
                ReflowBehavior: ='PowerAppsOneGrid.ReflowBehavior'.GridOnly
                Width: =338
                X: =18
                Y: =47
                ZIndex: =9

                subscriptionName1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="subscriptionName"
                    FieldName: ="subscriptionName"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =3
                    ZIndex: =47

                name1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="name"
                    FieldName: ="name"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =48

            TextCanvas21 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =46
                Size: =18
                Text: ="Assigned Resource Groups"
                Width: =322
                X: =18
                Y: =1
                ZIndex: =10

            TextCanvas21_1 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =46
                Size: =18
                Text: ="Automated Synapse Managed RGs"
                Width: =322
                X: =18
                Y: =246
                ZIndex: =11

            PowerAppsOneGrid1_1 As Table.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                EnableAggregation: ="no"
                Font: =""
                FontWeight: =""
                HeaderFont: =""
                HeaderFontWeight: =""
                Height: =174
                Items: =Filter(allResourceGroups, "synapseworkspace-managedrg-" in name)
                onCellValueChange: =false
                onFilter: =false
                onNavigate: =false
                onRowSelect: =false
                onSave: =false
                ReflowBehavior: ='PowerAppsOneGrid.ReflowBehavior'.GridOnly
                Width: =352
                X: =18
                Y: =292
                ZIndex: =12

                subscriptionName1_1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="subscriptionName"
                    FieldName: ="subscriptionName"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =3
                    ZIndex: =47

                managedBy1_1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="managedBy"
                    FieldName: ="managedBy"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =50

            PowerAppsOneGrid1_2 As Table.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                EnableAggregation: ="no"
                Font: =""
                FontWeight: =""
                HeaderFont: =""
                HeaderFontWeight: =""
                Height: =199
                Items: =Filter(allResourceGroups, Not("-resource-group" in name Or "synapseworkspace-managedrg-" in name))
                onCellValueChange: =false
                onFilter: =false
                onNavigate: =false
                onRowSelect: =false
                onSave: =false
                ReflowBehavior: ='PowerAppsOneGrid.ReflowBehavior'.GridOnly
                Width: =338
                X: =370
                Y: =47
                ZIndex: =13

                subscriptionName1_2 As pcfDataField.textualColumn:
                    FieldDisplayName: ="subscriptionName"
                    FieldName: ="subscriptionName"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =3
                    ZIndex: =47

                name1_1 As pcfDataField.textualColumn:
                    FieldDisplayName: ="name"
                    FieldName: ="name"
                    FieldType: ="s"
                    FieldVariantName: ="textualColumn"
                    Order: =4
                    ZIndex: =48

            TextCanvas21_2 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =46
                Size: =18
                Text: ="Unkown Resource Groups"
                Width: =322
                X: =370
                Y: =1
                ZIndex: =14

        AdminOnlyContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Admin Only"
            Width: =1366
            Y: =248
            ZIndex: =11

            ButtonCanvas7 As Button:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                OnSelect: |-
                    =Set(allUsers_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "GetAllUsers", "{}").result));
                    
                    Set(allUsers_created_json, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "GetAllUsersCreatorV2", "{}").result));
                    
                    Set(allUsers_created_table,
                        ForAll(Table(allUsers_created_json) As _users,
                            {
                                initiatedUserId: Text(_users.Value.msftce_creatoruserid),//Text(_users.Value.initiatedBy.user.id),
                                initiatedUserPrincipalName: Text(_users.Value.msftce_creatoruseremail),//Text(_users.Value.initiatedBy.user.userPrincipalName),
                                targetUserId: Text(_users.Value.msftce_userid),//Text(First(Table(_users.Value.targetResources)).Value.id),
                                targetUserPrincipalEmail: Text(_users.Value.msftce_name)//Text(First(Table(_users.Value.targetResources)).Value.userPrincipalName)
                    
                            }
                        )
                    );
                    
                    Set(allUsers_table,
                        ForAll(Table(allUsers_json) As _users,
                            {
                                displayName: _users.Value.displayName,
                                userPrincipalName: _users.Value.userPrincipalName,
                                objectId: _users.Value.id,
                                otherMails: _users.Value.otherMails,
                                accountEnabled: _users.Value.accountEnabled,
                                microsoftEmails: _users.Value.customSecurityAttributes.PFECRMOnlineExtensions.microsoftEmails,
                                parentAccountEmail: _users.Value.customSecurityAttributes.PFECRMOnlineExtensions.parentAccountEmail,
                                parentAccountId: _users.Value.customSecurityAttributes.PFECRMOnlineExtensions.parentAccountId,
                                manager: _users.Value.manager.userPrincipalName,
                                area: _users.Value.customSecurityAttributes.PFECRMOnlineExtensions.area,
                                isMainAccount: Boolean(_users.Value.customSecurityAttributes.PFECRMOnlineExtensions.isMainAccount),
                                lastSignInDate: DateTimeValue(_users.Value.signInActivity.lastSignInDateTime),
                                lastNonInteractiveSignInDateTime: DateTimeValue(_users.Value.signInActivity.lastNonInteractiveSignInDateTime),
                                createdDateTime: DateTimeValue(_users.Value.createdDateTime),
                                createdBy:
                                    //If(DateTimeValue(_users.Value.createdDateTime) < DateTimeValue("10/16/2023 00:00 AM"), 
                                
                                        //"-----",
                                        With( {_creator : LookUp(allUsers_created_table, targetUserId = _users.Value.id)},
                                            If(IsBlank(_creator), 
                                                "-----",//"will lookup",
                                                //With({_latestCreator: ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "FindUserCreator", "{""userEmail"":""" & _users.Value.userPrincipalName & """}").result)}, 
                                                //    If(CountRows(Table(_latestCreator.Value)) > 0, "**~~not captured in logs yet", "***not captured in logs yet...")
                                                //), 
                                                _creator.initiatedUserPrincipalName
                                            )
                    
                                        )
                                        
                                   // ) 
                                          
                            }
                        )
                    );
                    
                    ClearCollect(allUsers_table_extended, 
                        AddColumns(
                            Sort(allUsers_table, createdDateTime,SortOrder.Descending), 
                            "userRecord",
                            If(CountRows(Table(otherMails)) > 0 And EndsWith(First(Table(otherMails)).Value, "@microsoft.com"),
                                ParseJSON(ValidateADUser.Run(First(Table(otherMails)).Value).validuser), 
                                Blank()
                            )
                        )
                    );
                    
                    ClearCollect(allUsers_table_filtered, allUsers_table_extended);
                Text: ="Referesh All Users"
                Width: =165
                X: =0
                Y: =18
                ZIndex: =1

            DropdownCanvas1 As Dropdown.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                FontSize: =0
                Height: =25
                Items: |
                    =["All Guest Users", "Guest Users (Msft)", "Guest Users (Non-Msft)", "Users Not Linked", "'Test' Accounts", "Non Valid MS Users", "Not Approved MS Users", "All Approved MS Users"]
                OnChange: |
                    =Switch(DropdownCanvas1.Selected.Value,
                      "All Guest Users",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, "#EXT#" in userPrincipalName)),
                        "Guest Users (Msft)",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, "_microsoft.com#EXT#" in userPrincipalName)),
                        "Guest Users (Non-Msft)",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, "#EXT#" in userPrincipalName And Not("_microsoft.com#EXT#" in userPrincipalName))),
                        "Users Not Linked",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, IsBlank(manager) And CountRows(otherMails) = 0 )),
                        "'Test' Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, Not(IsBlank(manager)))),
                        "Non Valid MS Users",
                            //userRecord.validMSUser,
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, userRecord.validMSUser <> true And Not("#EXT#" in userPrincipalName) And CountRows(otherMails) > 0)),
                        "Not Approved MS Users",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, userRecord.validMSUser = true And Not(userRecord.managerEmail in approvedManagers))),
                        "All Approved MS Users",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, Not("#EXT#" in userPrincipalName) And userRecord.validMSUser = true And userRecord.managerEmail in approvedManagers))
                      )
                    //["All Guest Users", "Guest Users (Msft)", "Guest Users (Non-Msft)", "Users Not Linked", "'Test' Accounts", "Non Valid MS Users", "Not Approved MS Users", "All Approved MS Users"]
                ValidationState: ="None"
                Width: =234
                X: =105
                Y: =57
                ZIndex: =3

            TextCanvas5 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =32
                Text: |-
                    ="Filter Table By:"
                Width: =201
                X: =0
                Y: =50
                ZIndex: =4

            "AdminUserActionTabList As 'Tab list'.pcfdataset":
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =51
                Items: =["Link Msft User", "Link Test Account", "Deactivate Account", "Delete"]
                Width: =560
                X: =802
                Y: =6
                ZIndex: =5

            SearchPFEUsersContainer As groupContainer.manualLayoutContainer:
                Height: =159
                Visible: =AdminUserActionTabList.Selected.Value = "Link Test Account"
                Width: =443
                X: =359
                Y: =18
                ZIndex: =6

                "Gallery1_1 As gallery.'BrowseLayout_Vertical_ThreeTextOneImageVariant_ver5.0'":
                    DelayItemLoading: =true
                    Height: =93
                    Items: =Filter(allUsers_table_extended, TextInputCanvas2_1.Value in displayName)
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =56
                    Width: =422
                    X: =8
                    Y: =60
                    ZIndex: =1

                    Title4_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.displayName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.TemplateWidth - 185
                        X: =4
                        Y: =6
                        ZIndex: =2

                    Subtitle3_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =19
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.userPrincipalName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =366
                        X: =4
                        Y: =25
                        ZIndex: =3

                    Separator4_1 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =6

                    Rectangle4_1 As rectangle:
                        Height: =Parent.TemplateHeight - Separator4_1.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =7

                "TextInputCanvas2_1 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Placeholder: ="Search PFECRMOnline User..."
                    ValidationState: ="None"
                    Width: =283
                    X: =20
                    Y: =15
                    ZIndex: =2

            SearchMsftUsersContainer As groupContainer.manualLayoutContainer:
                Height: =183
                Visible: =AdminUserActionTabList.Selected.Value = "Link Msft User"
                Width: =463
                X: =339
                Y: =6
                ZIndex: =7

                "Gallery1 As gallery.'BrowseLayout_Vertical_ThreeTextOneImageVariant_ver5.0'":
                    DelayItemLoading: =true
                    Height: =117
                    Items: =Filter(Users, "@microsoft.com" in Mail)
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =116
                    Width: =399
                    X: =40
                    Y: =66
                    ZIndex: =1

                    Image2 As image:
                        Height: =84
                        Image: =IfError(Office365Users.UserPhotoV2(ThisItem.Id), "")
                        OnSelect: =Select(Parent)
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Width: =84
                        X: =16
                        Y: =(Parent.TemplateHeight / 2) - (Self.Height / 2)
                        ZIndex: =1

                    Title4 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.DisplayName
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.TemplateWidth - 185
                        X: =115
                        Y: =13
                        ZIndex: =2

                    Subtitle3 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =19
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.Mail
                        VerticalAlign: =VerticalAlign.Top
                        Width: =229
                        X: =Title4.X
                        Y: =Title4.Y + Title4.Height
                        ZIndex: =3

                    Body2 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.JobTitle
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Subtitle3.Width
                        X: =Title4.X
                        Y: =Subtitle3.Y + Subtitle3.Height
                        ZIndex: =4

                    NextArrow4 As icon.ChevronRight:
                        AccessibleLabel: =Self.Tooltip
                        Color: =RGBA(166, 166, 166, 1)
                        Height: =50
                        Icon: =Icon.ChevronRight
                        OnSelect: =Select(Parent)
                        PaddingBottom: =16
                        PaddingLeft: =16
                        PaddingRight: =16
                        PaddingTop: =16
                        Tooltip: ="View item details"
                        Width: =50
                        X: =320
                        Y: =63
                        ZIndex: =5

                    Separator4 As rectangle:
                        Height: =8
                        OnSelect: =Select(Parent)
                        Width: =Parent.TemplateWidth
                        Y: =Parent.TemplateHeight - Self.Height
                        ZIndex: =6

                    Rectangle4 As rectangle:
                        Height: =Parent.TemplateHeight - Separator4.Height
                        OnSelect: =Select(Parent)
                        Visible: =ThisItem.IsSelected
                        Width: =4
                        ZIndex: =7

                    Body2_1 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: =ThisItem.Department
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Subtitle3.Width
                        X: =Title4.X
                        Y: =70
                        ZIndex: =8

                    Body2_2 As label:
                        FontWeight: =If(ThisItem.IsSelected, FontWeight.Semibold, FontWeight.Normal)
                        Height: =Self.Size * 1.8
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =11
                        Text: |-
                            ="Manager: " & IfError(Office365Users.ManagerV2(ThisItem.Id).displayName, "")
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Subtitle3.Width
                        X: =Title4.X
                        Y: =89
                        ZIndex: =9

                "TextInputCanvas2 As 'Text input'":
                    Align: ="Start"
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    Placeholder: ="Search For MSFT User..."
                    ValidationState: ="None"
                    Width: =283
                    X: =40
                    Y: =27
                    ZIndex: =2

                Icon1 As icon.Search:
                    Height: =36
                    Icon: =Icon.Search
                    OnSelect: |
                        =Set(Users,Office365Users.SearchUser({searchTerm: TextInputCanvas2.Value}));
                    Width: =35
                    X: =334
                    Y: =30
                    ZIndex: =3

                Label2 As label:
                    Height: =25
                    Text: ="[" & CountRows(Users)  & "]"
                    Width: =59
                    X: =380
                    Y: =41
                    ZIndex: =4

            LinkTestAccountDetailsContainer As groupContainer.manualLayoutContainer:
                Height: =105
                Visible: =AdminUserActionTabList.Selected.Value = "Link Test Account"
                Width: =530
                X: =820
                Y: =72
                ZIndex: =8

                TextCanvas6_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =39
                    Text: |-
                        ="PFEUser (Main): " & Gallery1_1.Selected.userPrincipalName
                    Width: =314
                    X: =16
                    Y: =12
                    ZIndex: =1

                TextCanvas7_1 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =48
                    Text: |-
                        ="PFECRMOnline User: " & DataTable5.Selected.userPrincipalName
                    Width: =314
                    X: =16
                    Y: =51
                    ZIndex: =2

                ButtonCanvas1_1 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =42
                    OnSelect: |
                        =// Search for Current User in PFECRMOnline, searching against job title [TEMP], will check for 'other' email first
                        
                        Set(payloadString, "{""managerObjectId"":""" & Gallery1_1.Selected.objectId & """,""userObjectId"":""" & DataTable5.Selected.objectId  & """}");
                        Set(managerAssociate, ParseJSON('Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "UpdateManager", payloadString).result));
                        
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Admin Only", control: "LinkTestAccount", payload: {message: payloadString}});
                    Text: ="Link Parent Account"
                    Width: =163
                    X: =345
                    Y: =57
                    ZIndex: =3

            DeactivateAccountDetailsContainer As groupContainer.manualLayoutContainer:
                Height: =105
                Visible: =AdminUserActionTabList.Selected.Value = "Deactivate Account"
                Width: =530
                X: =820
                Y: =72
                ZIndex: =9

                TextCanvas9 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =44
                    Text: |-
                        ="PFECRMOnline User: " & DataTable5.Selected.userPrincipalName
                    Width: =308
                    X: =12
                    Y: =32
                    ZIndex: =1

                ButtonCanvas2 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |-
                        =Set(payloadString, 
                                "{""pfeCrmOnlineUserId"":""" & Text(DataTable5.Selected.objectId) & """}"
                                
                            );
                        'Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "DeactivateUser", payloadString);
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Admin Only", control: "DeactivateAccount", payload: {message: payloadString}});
                        
                        
                        Notify("User account deactivated succesfully", NotificationType.Success, 500);
                    Text: ="Deactivate"
                    Width: =96
                    X: =340
                    Y: =56
                    ZIndex: =2

            DeleteAccountContainer As groupContainer.manualLayoutContainer:
                Height: =105
                Visible: =AdminUserActionTabList.Selected.Value = "Delete"
                Width: =530
                X: =820
                Y: =72
                ZIndex: =10

                TextCanvas10 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =61
                    Text: |-
                        ="PFECRMOnline User: " & DataTable5.Selected.userPrincipalName
                    Width: =320
                    X: =14
                    Y: =23
                    ZIndex: =1

                ButtonCanvas3 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |-
                        =Set(payloadString, 
                                "{""pfeCrmOnlineUserId"":""" & Text(DataTable5.Selected.objectId) & """}"
                                
                            );
                        'Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "DeleteUser", payloadString);
                        
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Admin Only", control: "DeleteAccount", payload: {message: payloadString}});
                        
                        
                        Notify("User account deleted succesfully", NotificationType.Success, 500);
                    Text: ="Delete"
                    Width: =96
                    X: =360
                    Y: =52
                    ZIndex: =2

            LinkMsftUserDetailsContainer As groupContainer.manualLayoutContainer:
                Height: =105
                Visible: =AdminUserActionTabList.Selected.Value = "Link Msft User"
                Width: =530
                X: =820
                Y: =72
                ZIndex: =11

                TextCanvas6 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =39
                    Text: |-
                        ="Msft Account: " & Gallery1.Selected.Mail
                    Width: =314
                    X: =9
                    Y: =6
                    ZIndex: =1

                TextCanvas7 As Text:
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontStrikethrough: =false
                    FontUnderline: =false
                    Height: =48
                    Text: |-
                        ="PFECRMOnline User: " & DataTable5.Selected.userPrincipalName
                    Width: =314
                    X: =9
                    Y: =45
                    ZIndex: =2

                ButtonCanvas1 As Button:
                    BasePaletteColor: =
                    DisplayMode: =DisplayMode.Edit
                    Font: =""
                    FontColor: =
                    FontItalic: =false
                    FontSize: =0
                    FontStrikethrough: =false
                    FontUnderline: =false
                    FontWeight: =""
                    Height: =32
                    OnSelect: |-
                        =Set(targetUserAdDetails, ParseJSON(ValidateADUser.Run(Gallery1.Selected.Mail).validuser));
                        Set(emailsArray, "[""" & If(Text(targetUserAdDetails.upn) = Text(targetUserAdDetails.email), Text(targetUserAdDetails.upn) & """", Text(targetUserAdDetails.upn) & """,""" & Text(targetUserAdDetails.email) & """") & "]");
                        
                        Set(payloadString, 
                                "{""pfeCrmOnlineUserId"":""" & Text(DataTable5.Selected.objectId) & ""","
                                & """emailsToLink"":" & emailsArray & "}"
                            );
                        'Temp-TestingNewFlowForIncomingRequests'.Run("UserMaintenance", "LinkUser", payloadString);
                        
                        Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Admin Only", control: "LinkUser", payload: {message: payloadString}});
                        
                        
                        Notify("User account linked succesfully", NotificationType.Success, 500);
                    Text: ="Link Account"
                    Width: =138
                    X: =338
                    Y: =51
                    ZIndex: =3

            DropdownCanvas1_1 As Dropdown.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                FontSize: =0
                Height: =25
                Items: =["", "Users Not Linked", "Main Accounts", "Approved Main Accounts","NotApproved Main Accounts", "Test Accounts", "TestAccounts-Ordered", "Deactivated Accounts"]
                OnChange: |+
                    =//["Main Accounts", "Regular Accounts","No MsftEmails"]
                    //["", "Users Not Linked", "Main Accounts", "Test Accounts"]
                    
                    
                    Switch(DropdownCanvas1_1.Selected.Value,
                      "",
                         ClearCollect(allUsers_table_filtered, allUsers_table_extended),
                      "Users Not Linked",
                        ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, IsBlank(microsoftEmails) And IsBlank(parentAccountEmail))),
                        "Main Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, isMainAccount = true)),
                        "Approved Main Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, isMainAccount = true And area in ["SMC", "Field-NAM", "Core", "Field-LATAM", "Exception", "OnPrem"]  )),
                        "NotApproved Main Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, isMainAccount = true And Not(area in ["SMC", "Field-NAM", "Core", "Field-LATAM", "Exception", "OnPrem"]) )),
                        "Test Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, isMainAccount = false And (IsBlank(parentAccountEmail) = false))),
                        "TestAccounts-Ordered",
                            ClearCollect(allUsers_table_filtered, Sort(Filter(allUsers_table_extended, isMainAccount = false And (IsBlank(parentAccountEmail) = false)), "parentAccountEmail", SortOrder.Ascending)),
                        "Deactivated Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, accountEnabled = false)),
                      ///////
                      "Regular Accounts",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, isMainAccount = false)),
                      "No MsftEmails", 
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended,   IsBlank(microsoftEmails)   )),
                      "Reset",
                        ClearCollect(allUsers_table_filtered, allUsers_table_extended),
                      "HasParentAccount",
                        ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, IsBlank(parentAccountEmail) = false )),
                      "All Guest Users",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, "#EXT#" in userPrincipalName)),
                        "Guest Users (Msft)",
                            ClearCollect(allUsers_table_filtered, Filter(allUsers_table_extended, "_microsoft.com#EXT#" in userPrincipalName))
                      )
                    
                ValidationState: ="None"
                Width: =234
                X: =105
                Y: =115
                ZIndex: =13

            TextCanvas5_1 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =32
                Text: |-
                    ="Filter Table By V2:"
                Width: =201
                X: =0
                Y: =108
                ZIndex: =14

            DataTable5 As dataTable.datatable:
                BorderStyle: =BorderStyle.Solid
                DisplayMode: =DisplayMode.Edit
                Fill: =RGBA(0, 0, 0, 0)
                Height: =331
                Items: =allUsers_table_filtered
                Width: =1366
                X: =0
                Y: =189
                ZIndex: =15

                displayName_Column4 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="displayName"
                    FieldName: ="displayName"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =1
                    Text: |
                        =Switch(Text(ThisItem.userRecord.accountEnabled), "Yes", If(ThisItem.userRecord.managerEmail in approvedManagers, "🟩", "🟨"), "No", "🟥") & ThisItem.displayName
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =34

                userPrincipalName_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="userPrincipalName"
                    FieldName: ="userPrincipalName"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =2
                    Text: |-
                        =If(("#EXT#" in ThisItem.userPrincipalName), 
                            If("_microsoft.com" in ThisItem.userPrincipalName, "🟨", "🟥")) & ThisItem.userPrincipalName
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =35

                accountEnabled_Column1 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="accountEnabled"
                    FieldName: ="accountEnabled"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =3
                    Text: =ThisItem.accountEnabled
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =36

                isMainAccount_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="isMainAccount"
                    FieldName: ="isMainAccount"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =4
                    Text: =ThisItem.isMainAccount
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =37

                microsoftEmails_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="microsoftEmails"
                    FieldName: ="microsoftEmails"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =5
                    Text: |
                        =Concat(Table(ThisItem.microsoftEmails), Value, ";") 
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =38

                area_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="area"
                    FieldName: ="area"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =6
                    Text: =ThisItem.area
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =39

                parentAccountEmail_Column2 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="parentAccountEmail"
                    FieldName: ="parentAccountEmail"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =7
                    Text: =ThisItem.parentAccountEmail
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =40

                createdBy_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="createdBy"
                    FieldName: ="createdBy"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =8
                    Text: =ThisItem.createdBy
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =41

                createdDateTime_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="createdDateTime"
                    FieldName: ="createdDateTime"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =9
                    Text: =ThisItem.createdDateTime
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =42

                lastSignInDate_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="lastSignInDate"
                    FieldName: ="lastSignInDate"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =10
                    Text: =ThisItem.lastSignInDate
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =43

                lastNonInteractiveSignInDateTime_Column3 As dataTableColumn.textualColumn:
                    DisplayMode: =DisplayMode.Edit
                    FieldDisplayName: ="lastNonInteractiveSignInDateTime"
                    FieldName: ="lastNonInteractiveSignInDateTime"
                    FieldVariantName: ="textualColumn"
                    Height: =Parent.Height
                    LayoutHeight: =Parent.Height
                    Order: =11
                    Text: =ThisItem.lastNonInteractiveSignInDateTime
                    Width: =100
                    X: =0
                    Y: =0
                    ZIndex: =44

        AppSettingsContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "App Settings"
            Width: =1366
            Y: =248
            ZIndex: =12

            RoleAssignmentToggle As Toggle:
                BasePaletteColor: =
                Checked: =Boolean(appSettings.automaticallyAssignGlobalAdmin)
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =27
                Label: =If(RoleAssignmentToggle.Checked, "Global Admin", "Power Platform Admin")
                LabelPosition: ='Toggle.LabelPosition'.After
                OnCheck: =false
                OnSelect: |-
                    =//Set(appSettings, Patch(appSettings, {automaticallyAssignGlobalAdmin: RoleAssignmentToggle.Checked}))
                    
                    Patch('Environment Variable Values', Last('Environment Variable Values'), 
                        {Value: "{""automaticallyAssignGlobalAdmin"":" & RoleAssignmentToggle.Checked  & ",""licenseDurationInDays"":" & LicenseDurationToggle.Checked & ",""roleDurationInHours"":" & GlobalAdminDuration.Checked &"}"})
                OnUncheck: =false
                Width: =223
                X: =226
                Y: =40
                ZIndex: =1

            LicenseDurationToggle As Toggle:
                BasePaletteColor: =
                Checked: =Boolean(appSettings.licenseDurationInDays)
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =30
                Label: =If(LicenseDurationToggle.Checked, "Days", "Minutes")
                LabelPosition: ='Toggle.LabelPosition'.After
                OnCheck: =false
                OnSelect: |-
                    =Patch('Environment Variable Values', Last('Environment Variable Values'), 
                        {Value: "{""automaticallyAssignGlobalAdmin"":" & RoleAssignmentToggle.Checked  & ",""licenseDurationInDays"":" & LicenseDurationToggle.Checked & ",""roleDurationInHours"":" & GlobalAdminDuration.Checked &"}"})
                OnUncheck: =false
                Width: =121
                X: =226
                Y: =67
                ZIndex: =2

            GlobalAdminDuration As Toggle:
                BasePaletteColor: =
                Checked: =Boolean(appSettings.roleDurationInHours)
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =30
                Label: =If(GlobalAdminDuration.Checked, "Hours", "Minutes")
                LabelPosition: ='Toggle.LabelPosition'.After
                OnCheck: =false
                OnSelect: |-
                    =Patch('Environment Variable Values', Last('Environment Variable Values'), 
                        {Value: "{""automaticallyAssignGlobalAdmin"":" & RoleAssignmentToggle.Checked  & ",""licenseDurationInDays"":" & LicenseDurationToggle.Checked & ",""roleDurationInHours"":" & GlobalAdminDuration.Checked &"}"})
                OnUncheck: =false
                Width: =121
                X: =226
                Y: =97
                ZIndex: =3

            TextCanvas8 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =27
                Text: |-
                    ="Role Assignment:"
                Width: =121
                X: =40
                Y: =40
                ZIndex: =4

            TextCanvas8_1 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =27
                Text: |-
                    ="License Duration Unit:"
                Width: =146
                X: =40
                Y: =70
                ZIndex: =5

            TextCanvas8_2 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =27
                Text: |-
                    ="Global Admin Duration Unit:"
                Width: =211
                X: =40
                Y: =100
                ZIndex: =6

        FeedbackContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Feedback"
            Width: =1366
            Y: =248
            ZIndex: =15

            "FeedBackCommentsInput As 'Text input'":
                Align: ="Start"
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =103
                Mode: ='TextInputCanvas.Mode'.Multiline
                Placeholder: ="Please enter comments here"
                Width: =508
                X: =15
                Y: =107
                ZIndex: =1

            FeedbackTypeDropdown As Dropdown.pcfdataset:
                DisplayMode: =DisplayMode.Edit
                Height: =32
                Items: =["License Request", "Other"]
                Required: =false
                Width: =320
                X: =15
                Y: =57
                ZIndex: =2

            TextCanvas13 As Text:
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                Height: =33
                Text: ="We want to help, tell us what you think would be useful"
                Width: =378
                X: =15
                Y: =24
                ZIndex: =3

            ButtonCanvas6 As Button:
                BasePaletteColor: =
                DisplayMode: =If(IsBlank(FeedbackTypeDropdown.Selected) Or IsBlank(FeedBackCommentsInput.Value) ,DisplayMode.Disabled, DisplayMode.Edit)
                Font: =""
                FontColor: =
                FontItalic: =false
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =32
                OnSelect: |+
                    =Set(payloadObject, 
                        {
                            microsoftEmail: User().Email,
                            feedbackType: FeedbackTypeDropdown.Selected.Value,
                            feedbackComments: FeedBackCommentsInput.Value
                        }
                    );
                    
                    //Set(payloadObject, 
                    //        "{""pfeCrmOnlineUserId"":""" & Text(userSearch_json.id) & ""","
                    //        & """emailsToLink"":""" & emailsArray & """}"
                    //    );
                    
                    //PFECRMOnlineHelper.PerformAction({Area:"UserMaintenance" ,Operation:"LinkUser",Parameters: ParseJSON(payloadString)} );
                    'Temp-TestingNewFlowForIncomingRequests'.Run("Other", "Feedback", JSON(payloadObject));
                    Trace("App Usage", TraceSeverity.Information, { userEmail : User().Email, area: "Feedback", control: "CreateFeedback", payload: {message: payloadObject}});
                    
                    
                Text: ="Submit"
                Width: =96
                X: =15
                Y: =233
                ZIndex: =5

        AzureContainer As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Height: =520
            Visible: =AppNavigationSection.Selected.displayName = "Azure"
            Width: =1366
            Y: =248
            ZIndex: =16

            TextCanvas19 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =38
                Text: ="Checking Azure Resources"
                Width: =303
                X: =20
                Y: =20
                ZIndex: =1

            ButtonCanvas10 As Button:
                BasePaletteColor: =
                DisplayMode: =If(IsBlank(userAzGroupDetails), DisplayMode.Edit, DisplayMode.Disabled)
                FontColor: =
                Height: =48
                OnSelect: |-
                    =Set(azurePayload, {
                       subscriptionId: LookUp(allAzureSubscriptions_pfecrmonlinemanged, name = "pfecrmonline1").subscriptionId,
                       msftUserEmail: userProfile.userPrincipalName,
                       pfeCrmOnlineUserId: userMainRecord.id
                    });
                    
                    'Temp-TestingNewFlowForIncomingRequests'.Run("Azure","CreateResourceGroupForUser", JSON(azurePayload));
                    
                    Notify("Your resource group with Owner rights has been created. Allow a few minutes to reflect");
                    //PFECRMOnlineHelper.PerformAction({Area: "Azure",Operation:"CreateResourceGroupForUser",Parameters: ParseJSON(JSON(azurePayload))});
                Text: ="Request Source Group"
                Visible: =true
                Width: =186
                X: =20
                Y: =212
                ZIndex: =2

            TextCanvas22 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =73
                Text: |-
                    =//Substitute(userProfile.userPrincipalName, "@microsoft.com", "") & "," &  LookUp(allResourceGroups, name = (Substitute(userProfile.userPrincipalName, "@microsoft.com", "")& "-resource-group")).id ;
                    
                    
                    //With( {mainGroup : LookUp(allResourceGroups, name = (Substitute(userProfile.userPrincipalName, "@microsoft.com", "") & "-resource-group")  )},
                    //   If(IsBlank(mainGroup),
                    //       // If is blank
                    //       "Is Blank"
                    //       ,
                    //       // If is not blank
                    //       "Not Blank"
                    //   )
                    
                    
                    //)
                    If(IsBlank(userAzGroupDetails),
                       //Is Blank
                          "You are not onboarded for an Azure Resource Group. Request One Below"
                       ,
                       //Is Not blnk
                          "You are onboarded for an Azure Resource Group. Open this with your PFECRMOnline: "
                    
                    )
                Width: =568
                X: =20
                Y: =58
                ZIndex: =3

            TextCanvas20 As Text:
                DisplayMode: =DisplayMode.Edit
                FontColor: =
                Height: =45
                Text: = userAzGroupDetails.agUrl
                Visible: =If(IsBlank(userAzGroupDetails), false, true)
                Width: =929
                X: =20
                Y: =143
                ZIndex: =4

        InitialLoadingScreen As groupContainer.manualLayoutContainer:
            Fill: =RGBA(219, 219, 219, .75)
            Height: =App.Height
            Visible: =!fullyLoaded
            Width: =App.Width
            ZIndex: =17

            Spinner3 As Spinner:
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =200
                Label: ="Loading Initial Data"
                Visible: =true
                Width: =200
                X: =492
                Y: =268
                ZIndex: =1

        SectionLoader As groupContainer.manualLayoutContainer:
            BorderThickness: =0.5
            Fill: =RGBA(219, 219, 219, .75)
            Height: =520
            Visible: =sectionLoader.visible
            Width: =1366
            Y: =248
            ZIndex: =18

            Spinner3_1 As Spinner:
                Appearance: ='Spinner.Appearance'.Primary
                BasePaletteColor: =
                DisplayMode: =DisplayMode.Edit
                Font: =""
                FontColor: =
                FontItalic: =false
                FontSize: =0
                FontStrikethrough: =false
                FontUnderline: =false
                FontWeight: =""
                Height: =SectionTemplate.Height
                Label: =sectionLoader.label
                Visible: =sectionLoader.visible
                Width: =SectionTemplate.Width
                X: =0
                Y: =0
                ZIndex: =1

